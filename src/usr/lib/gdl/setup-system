#!/usr/bin/env bash

configure_system() {
  op_title="${config_op_msg}"

  if "${drm}"; then
    sed -i \
      '/^MODULES=/ s/.$/ nvidia nvidia_modeset nvidia_uvm nvidia_drm )/;s/" /"/'
    sed -i 's!FILES=""!FILES="/etc/modprobe.d/nvidia.conf"!' \
      /mnt/etc/mkinitcpio.conf
    echo "options nvidia_drm modeset=1" >/mnt/etc/modprobe.d/nvidia.conf
    if (grep <<<"${GPU}" "nvidia" &>/dev/null); then
      echo "blacklist nouveau" >>/mnt/etc/modprobe.d/nvidia.conf
    fi
    if [ ! -d /mnt/etc/pacman.d/hooks ]; then
      mkdir /mnt/etc/pacman.d/hooks
    fi
    echo -e "${nvidia_hook}\nExec=/usr/bin/mkinitcpio -p linux" \
      >/mnt/etc/pacman.d/hooks/nvidia.hook
    if ! "${crypted}" && ! "${enable_f2fs}"; then
      arch-chroot /mnt mkinitcpio -p linux |& tee -a LOG_FILE
    fi
    log "Enable nvidia drm"
  fi

  if "${enable_f2fs}"; then
    sed -i '/^MODULES=/ s/.$/ f2fs crc32 libcrc32c crc32c_generic crc32c-intel crc32-pclmul )/;s/" /"/' /mnt/etc/mkinitcpio.conf
    if ! "${crypted}"; then
      arch-chroot /mnt mkinitcpio -p linux |& tee -a LOG_FILE
    fi
    log "Configure system for f2fs"
  fi

  if "${enable_xfs}"; then
    sed -i '/^MODULES=/ s/.$/ xfs )/;s/" /"/' /mnt/etc/mkinitcpio.conf
    if ! "${crypted}"; then
      arch-chroot /mnt mkinitcpio -p linux |& tee -a LOG_FILE
    fi
    log "Configure system for xfs"
  fi

  if (egrep <<<"${BOOT}" "nvme.*" &>/dev/null); then
    sed -i '/^MODULES=/ s/.$/ nvme )/;s/" /"/' /mnt/etc/mkinitcpio.conf
    if ! "${crypted}"; then
      arch-chroot /mnt mkinitcpio -p linux |& tee -a LOG_FILE
    fi
    log "Configure system for nvme"
  fi

  if "${crypted}" && "${UEFI}"; then
    echo "/dev/${BOOT} ${esp_mnt} vfat rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,errors=remount-ro 0 2" >/mnt/etc/fstab
  elif "${crypted}"; then
    echo "/dev/${BOOT} /boot ext4 defaults 0 2" >/mnt/etc/fstab
  fi

  if "${crypted}"; then
    echo "/dev/mapper/root / ${FS} defaults 0 1" >>/mnt/etc/fstab
    echo "/dev/mapper/tmp /tmp tmpfs defaults 0 0" >>/mnt/etc/fstab
    echo "tmp /dev/lvm/tmp /dev/urandom tmp,cipher=aes-xts-plain64,size=256" \
      >>/mnt/etc/crypttab
    if "${SWAP}"; then
      echo "/dev/mapper/swap none swap sw 0 0" >>/mnt/etc/fstab
      echo "swap /dev/lvm/swap /dev/urandom swap,cipher=aes-xts-plain64,size=256" >>/mnt/etc/crypttab
    fi
    sed -i 's/HOOKS=.*/HOOKS="base udev autodetect keyboard keymap consolefont modconf block encrypt lvm2 filesystems fsck"/' /mnt/etc/mkinitcpio.conf
    arch-chroot /mnt mkinitcpio -p linux |& tee -a LOG_FILE
    log "Configure system for encryption"
  else
    sed -i 's/HOOKS=.*/HOOKS="base udev autodetect keyboard keymap consolefont modconf block lvm2 filesystems fsck"/' /mnt/etc/mkinitcpio.conf
    arch-chroot /mnt mkinitcpio -p linux |& tee -a LOG_FILE
    log "Configure system with the default mkinitcpio hooks"
  fi

  sed -i -e "s/#${LOCALE}/${LOCALE}/" /mnt/etc/locale.gen
  echo LANG="${LOCALE}" >/mnt/etc/locale.conf
  arch-chroot /mnt locale-gen
  log "Set system locale: ${LOCALE}"

  if [ "${keyboard}" != "${default}" ]; then
    echo "KEYMAP=${keyboard}" >/mnt/etc/vconsole.conf
    echo -e "Section \"InputClass\"\nIdentifier \"system-keyboard\"\nMatchIsKeyboard \"on\"\nOption \"XkbLayout\" \"${keyboard}\"\nEndSection" >/mnt/etc/X11/xorg.conf.d/00-keyboard.conf
    arch-chroot /mnt localectl set-x11-keymap "${keyboard}"
    log "Set system keymap: ${keyboard}"
  fi

  arch-chroot /mnt ln -sf /usr/share/zoneinfo/"${ZONE}" /etc/localtime
  log "Set system time zone: ${ZONE}"

  enable_service NetworkManager.service

  if "${enable_bt}"; then
    enable_service bluetooth.service
  fi

  echo "${start_term}" >/mnt/etc/skel/.xinitrc
  echo "${start_term}" >/mnt/root/.xinitrc
  log "Create xinitrc: ${start_term}"

  enable_service "${DM}".service

  if "${VM}"; then
    case "${virt}" in
    vbox)
      enable_service vboxservice.service
      ;;
    vmware)
      cat /mnt/proc/version >/mnt/etc/arch-release
      enable_service vmtoolsd.service
      enable_service vmware-vmblock-fuse.service
      mkdir /mnt/etc/init.d
      for x in {0..6}; do mkdir -p /mnt/etc/init.d/rc${x}.d; done
      ;;
    esac
  fi

  config_env &
  pid=$! pri="0.1" msg="${wait_load}\n\n \Z1> \Z3gdl configure desktop\Zn" load
  if [ "${DM}" = "lightdm" ]; then
    cp -r "${gdl_directory}"/extra/desktop/lightdm/lightdm-gtk-greeter.conf \
      /mnt/etc/lightdm/
  fi

  enable_service dhcpcd.service
  enable_service cups.service
  enable_service cpupower.service

  if [ -f /mnt/var/lib/pacman/db.lck ]; then
    rm /mnt/var/lib/pacman/db.lck &>/dev/null
  fi

  arch-chroot /mnt pacman -Sy |& tee -a LOG_FILE
  log "Updated pacman databases"

  arch-chroot /mnt ufw enable
  enable_service ufw.service
  log "Enabled firewall"

  cp /mnt/etc/skel/.bash_profile /mnt/root/
  cp "${gdl_directory}"/extra/.bashrc-root /mnt/root/.bashrc
  cp "${gdl_directory}"/extra/.bashrc /mnt/etc/skel/

  sed -i 's/^#Color$/Color/' /mnt/etc/pacman.conf
  sed -i 's/^#TotalDownload$/TotalDownload/' /mnt/etc/pacman.conf
  sed -i 's/^#CheckSpace$/CheckSpace/' /mnt/etc/pacman.conf
  sed -i 's/^#VerbosePkgLists$/VerbosePkgLists/' /mnt/etc/pacman.conf
  sed -i '/^VerbosePkgLists$/ a ILoveCandy' /mnt/etc/pacman.conf
  sed -i '/\[multilib]$/ {
    N
    /Include/s/#//g}' /mnt/etc/pacman.conf
  log "Customized pacman.conf"

  echo "${hostname}" >/mnt/etc/hostname
  log "Set hostname: ${hostname}"
  arch-chroot /mnt chsh -s /bin/bash |& tee -a LOG_FILE #&>/dev/null
  input="$(echo "${root_crypt}" | openssl enc -aes-256-cbc -a -d -salt -pbkdf2 \
    -iter 1000 -pass pass:"${ssl_key}")"
  printf "%s\n%s" "${input}" "${input}" | arch-chroot /mnt passwd root
  unset input
  log "Set password for root"
}
