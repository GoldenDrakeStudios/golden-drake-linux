#!/bin/bash

set_user() {
  op_title="${user_op_msg}"
  while (true); do
    # Prompt for username
    NEW_USERNAME=$(dialog --stdout --cancel-button "${cancel}" --ok-button \
      "${ok}" --inputbox "\n${user_msg1}" 12 55)
    if [ "$?" -gt "0" ]; then
      break
    elif [ -z "${NEW_USERNAME}" ]; then
      message "${user_err_msg2}"
    elif (grep <<<"${NEW_USERNAME}" "^[0-9]\|[A-Z]\|[]:/?#@\!\$&'()*+,;=%[]" \
        &>/dev/null); then
      message "${user_err_msg}"
    else
      log "Username set: ${NEW_USERNAME}"
      while (true); do
        # Prompt for full name
        NEW_USER_FULL_NAME=$(dialog --stdout --cancel-button "${cancel}" \
          --ok-button "${ok}" --inputbox "\n${user_msg2}" 12 55)
        if [ "$?" != "0" ]; then
          break
        elif (grep <<<"${NEW_USER_FULL_NAME}" "," &>/dev/null); then
          message "${full_name_err_msg}"
        else
          # Prompt for password ('root' will use the same password)
          set_password
          break
        fi
      done
      break
    fi
  done
}

set_hostname() {
  op_title="${host_op_msg}"
  while (true); do
    # Prompt for hostname
    NEW_HOSTNAME=$(dialog --ok-button "${ok}" --no-cancel --inputbox \
      "\n${host_msg}" 12 55 "golden" --stdout | sed 's/ //g')
    # Check for a starting number or any unallowed characters
    if (grep <<<"${NEW_HOSTNAME}" \
        "^[0-9]\|[\[\$\!\'\"\`\\|%&#@()+=<>~;:/?.,^{}]\|]" &>/dev/null); then
      message "${host_err_msg}"
    else
      break
    fi
  done
}

set_password() {
  op_title="${passwd_op_msg}"
  source "${LANG_FILE}"
  local input='a' input_check='b'
  while [ "${input}" != "${input_check}" ]; do
    input=$(dialog --stdout --no-cancel --clear --insecure --passwordbox \
      "\n${user_var0}" 11 55)
    input_check=$(dialog --stdout --no-cancel --clear --insecure --passwordbox \
      "\n${user_var1}" 11 55)
    if [ -z "${input}" ]; then
      message "${passwd_msg0}"
      input_check="check"
    elif [ "${input}" != "${input_check}" ]; then
      message "${passwd_msg1}"
    fi
  done
  NEW_PW="$(echo "${input}" | openssl enc -aes-256-cbc -a -salt -pbkdf2 \
    -iter 1000 -pass pass:"${ssl_key}")"
  unset input input_check
  log "Password set for user: ${NEW_USERNAME}"
  op_title="${user_op_msg}"
}

add_user() {
  if [ "${NEW_USER_FULL_NAME}" = "" ]; then
    arch-chroot /mnt useradd -m -G audio,network,power,storage,optical -s \
      /bin/bash "${NEW_USERNAME}"
  else
    arch-chroot /mnt useradd -m -G audio,network,power,storage,optical -c \
      "${NEW_USER_FULL_NAME}" -s /bin/bash "${NEW_USERNAME}"
  fi
  local pw
  pw="$(echo "${NEW_PW}" | openssl enc -aes-256-cbc -a -d -salt -pbkdf2 -iter \
    1000 -pass pass:"${ssl_key}")"
  printf "%s\n%s" "${pw}" "${pw}" | arch-chroot /mnt passwd "${NEW_USERNAME}"
  unset pw
  sed -i '/%wheel ALL=(ALL) ALL/s/^#//' /mnt/etc/sudoers
  arch-chroot /mnt usermod -a -G wheel "${NEW_USERNAME}"
  # Add shortcut for installing Battle.net if Lutris was installed
  if (grep <<<"${BASE_PACKAGES}" "lutris" &>/dev/null); then
    mkdir /mnt/home/"${NEW_USERNAME}"/Desktop
    echo -e "[Desktop Entry]\nVersion=1.0\nType=Link\nName=Install Battle.net
Comment=Install the Blizzard Battle.net app via Lutris\nIcon=user-bookmarks
URL=lutris:blizzard-battlenet-standard" \
      >/mnt/home/"${NEW_USERNAME}"/Desktop/blizzard.desktop
    arch-chroot /mnt chown -R "${NEW_USERNAME}:${NEW_USERNAME}" \
      /home/"${NEW_USERNAME}"/Desktop
  fi
  log "User added: ${NEW_USERNAME}"
}
