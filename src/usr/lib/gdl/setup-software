#!/usr/bin/env bash

select_additional_software() {
  software=""

  # Games
  op_title="${games}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 70 10 \
    "steam" "${game10}" OFF \
    "lutris" "Lutris game installer and launcher" OFF \
    "itch" "(AUR) Manage itch.io games" OFF \
    "supertuxkart" "${game6}" OFF \
    "extremetuxracer" "Extreme Tux Racer" OFF \
    "supertux" "${game5}" OFF \
    "dwarffortress" "Build a dwarven outpost or play as an adventurer" OFF \
    "xonotic" "${game9}" OFF \
    "warsow" "${game8}" OFF \
    "bzflag" "${game2}" OFF \
    "open-adventure" "(AUR) Port of Colossal Cave Adventure" OFF \
    "bsd-games2" "(AUR) ${game1}" OFF \
    "aisleriot" "${game11}" OFF 3>&1 1>&2 2>&3)" "
  if (grep <<<"${software}" "steam" &>/dev/null); then
    software+="steam-native-runtime "
  fi

  # Development software
  op_title="${program_msg}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "godot" "(AUR) Multi-platform 2D and 3D game engine" OFF \
    "unityhub" "(AUR) Manage Unity game engine installations and projects" OFF \
    "android-studio" "(AUR) Android IDE (stable branch)" OFF \
    "python-pygame" "Python game library" OFF \
    "pygtk" "(AUR) Python bindings for the GTK widget set" OFF 3>&1 1>&2 2>&3)" "

  # Graphics/drawing/modeling software
  op_title="${graphic_msg}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "gimp" "${graphic2}" OFF \
    "inkscape" "${graphic9}" OFF \
    "blender" "${graphic0}" OFF \
    "aseprite" "(AUR) Create animated sprites and pixel art" OFF \
    "mtpaint" "${graphic10}" OFF \
    "mypaint" "${graphic11}" OFF \
    "graphicsmagick" "${graphic8}" OFF \
    "graphviz" "${graphic3}" OFF \
    "imagemagick" "${graphic4}" OFF \
    "darktable" "${graphic1}" OFF \
    "rawtherapee" "${graphic7}" OFF 3>&1 1>&2 2>&3)" "

  # Multimedia software
  op_title="${multimedia_msg}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "vlc" "${media6}" ON \
    "multimedia-codecs" "${media8}" OFF \
    "obs-studio" "Free software for live streaming and recording" OFF \
    "openshot" "An award-winning free and open-source video editor" OFF \
    "kdenlive" "${media9}" OFF \
    "pitivi" "${media2}" OFF \
    "simplescreenrecorder" "${media3}" OFF \
    "byzanz" "${media10}" OFF \
    "handbrake" "${media0}" OFF \
    "mplayer" "${media1}" OFF \
    "mpv" "${media7}" OFF \
    "smplayer" "${media4}" OFF \
    "snappy-player" "${media11}" OFF \
    "totem" "${media5}" OFF \
    "youtube-dl" "${media12}" OFF 3>&1 1>&2 2>&3)" "
  if (grep <<<"${software}" "vlc"); then
    software+="qt5 phonon-qt5-vlc vlc-plugin-fluidsynth soundfont-fluid "
  fi
  if (grep <<<"${software}" "multimedia-codecs"); then
    software=$(sed <<<"${software}" 's/multimedia-codecs/gst-plugins-base gst-plugins-good gst-plugins-bad gst-plugins-ugly ffmpegthumbnailer gst-libav/')
  fi

  # Audio software
  op_title="${audio_msg}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "audacity" "${audio0}" OFF \
    "audacious" "${audio1}" OFF \
    "clementine" "${audio10}" OFF \
    "cmus" "${audio2}" OFF \
    "jack2" "${audio3}" OFF \
    "projectm" "${audio4}" OFF \
    "lmms" "${audio5}" OFF \
    "mpd" "${audio6}" OFF \
    "ncmpcpp" "${audio7}" OFF \
    "pianobar" "${audio9}" OFF \
    "pavucontrol" "${audio8}" OFF \
    "pulseaudio-equalizer" "${audio11}" OFF \
    "qmmp" "${audio13}" OFF \
    "rhythmbox" "${audio14}" OFF 3>&1 1>&2 2>&3)" "

  # Internet software
  op_title="${internet_msg}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "firefox" "${net2}" OFF \
    "chromium" "${net0}" OFF \
    "transmission-gtk" "${net8}" OFF \
    "hexchat" "${net11}" OFF \
    "opera" "${net5}" OFF \
    "elinks" "${net3}" OFF \
    "lynx" "${net3}" OFF \
    "irssi" "${net9}" OFF \
    "midori" "${net12}" OFF \
    "minitube" "${net4}" OFF \
    "filezilla" "${net1}" OFF \
    "thunderbird" "${net6}" OFF 3>&1 1>&2 2>&3)" "
  if (grep <<<"${software}" "firefox" &>/dev/null) && [ -n "${bro}" ]; then
    software+="firefox-i18n-${bro} "
  fi
  if (grep <<<"${software}" "thunderbird" &>/dev/null) && [ -n "${bro}" ] &&
      [ "${bro}" != "lv" ]; then
    software+="thunderbird-i18n-${bro} "
  fi

  # Office software
  op_title="${office_msg}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "libreoffice-fresh" "${office4}" OFF \
    "libreoffice-still" "${office5}" OFF \
    "abiword" "${office0}" OFF \
    "calligra" "${office1}" OFF \
    "evince" "${office9}" OFF \
    "gnumeric" "${office3}" OFF \
    "glabels" "${office10}" OFF \
    "gobby" "${office8}" OFF \
    "mupdf" "${office6}" OFF \
    "scribus" "${office11}" OFF \
    "zathura" "${office7}" OFF 3>&1 1>&2 2>&3)" "
  if (grep <<<"${software}" "libreoffice-fresh" &>/dev/null) &&
      [ -n "${lib}" ]; then
    software+="libreoffice-fresh-${lib} "
  fi
  if (grep <<<"${software}" "libreoffice-still" &>/dev/null) &&
      [ -n "${lib}" ]; then
    software+="libreoffice-still-${lib} "
  fi

  # Text editors
  op_title="${text_editor}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "atom" "${edit7}" OFF \
    "emacs" "${edit0}" OFF \
    "geany" "${edit1}" OFF \
    "gedit" "${edit2}" OFF \
    "gvim" "${edit3}" OFF \
    "mousepad" "${edit4}" OFF \
    "neovim" "${edit5}" OFF \
    "vim" "${edit6}" OFF \
    "zim" "${edit8}" OFF 3>&1 1>&2 2>&3)" "

  # Fonts
  op_title="${fonts}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "bdf-unifont" "${font0}" OFF \
    "noto-fonts-cjk" "${font1}" OFF 3>&1 1>&2 2>&3)" "

  # Terminals
  op_title="${terminal_msg}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "terminator" "${term5}" ON \
    "cool-retro-term" "${term12}" OFF \
    "guake" "${term1}" OFF \
    "kmscon" "${term2}" OFF \
    "pantheon-terminal" "${term3}" OFF \
    "rxvt-unicode" "${term4}" OFF \
    "screen" "${sys11}" OFF \
    "terminology" "${term10}" OFF \
    "termite" "${term9}" OFF \
    "tilda" "${term11}" OFF \
    "tilix" "${term13}" oFF \
    "tmux" "${sys14}" OFF \
    "xfce4-terminal" "${term6}" OFF \
    "yakuake" "${term7}" OFF 3>&1 1>&2 2>&3)" "

  # Utilities
  op_title="${util}"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 65 10 \
    "htop" "${sys6}" ON \
    "gparted" "${sys4}" OFF \
    "wget" "${sys18}" OFF \
    "bc" "${sys25}" OFF \
    "bleachbit" "${sys22}" OFF \
    "conky" "${sys2}" OFF \
    "dmenu" "${sys19}" OFF \
    "galculator" "${sys24}" OFF \
    "gnome-packagekit" "${sys26}" OFF \
    "gnome-software" "${sys27}" OFF \
    "gpm" "${sys5}" OFF \
    "k3b" "${sys8}" OFF \
    "nmap" "${sys9}" OFF \
    "ntfs-3g" "${sys28}" OFF \
    "ranger" "${sys20}" OFF \
    "scrot" "${sys13}" OFF \
    "tuxcmd" "${sys15}" OFF \
    "virtualbox" "${sys16}" OFF \
    "xscreensaver" "${sys34}" OFF 3>&1 1>&2 2>&3)" "

  # Theming
  op_title="Themes & Icons"
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "arc-gtk-theme" "-" ON \
    "elementary-icon-theme" "-" ON 3>&1 1>&2 2>&3)" "

  # Add selected software to package list
  download=$(echo "${software}" | sed 's/\"//g' | tr ' ' '\n' | nl | \
    sort -u -k2 | sort -n | cut -f2- | sed 's/$/ /g' | tr -d '\n')
  download_list=$(echo "${download}" | sed -e 's/^[ \t]*//')
  log "Add software list: ${download_list}"
  additional_packages+="${download_list} "
}

install_additional_software() {
  # Create a special temporary user for installing and using yay (AUR helper)
  clear && log "Creating temporary user: 'yaybuilder'"
  newpass=$(< /dev/urandom tr -dc "@#*%&_A-Z-a-z-0-9" | head -c16)
  arch-chroot /mnt mkdir -v yaytemp |& tee log
  arch-chroot /mnt chmod 777 yaytemp |& tee log
  arch-chroot /mnt useradd -rNM -d /yaytemp -s /usr/bin/nologin yaybuilder |& \
    tee log
  arch-chroot /mnt sh -c "echo -e '$newpass\n$newpass\n' | passwd yaybuilder"
  log "Adding 'yaybuilder' to sudoers.d" |& tee log
  arch-chroot /mnt sh -c "echo 'yaybuilder ALL=(ALL) NOPASSWD: ALL' | tee \
    /etc/sudoers.d/yaybuilder" |& tee log
  arch-chroot /mnt sh -c "echo 'root ALL=(yaybuilder) NOPASSWD: ALL' | tee -a \
    /etc/sudoers.d/yaybuilder" |& tee log

  # Install yay, update, then install additional packages using yay
  log "Installing yay (AUR helper)"
  arch-chroot /mnt sh -c "cd yaytemp && \
    sudo -u yaybuilder git clone https://aur.archlinux.org/yay-bin.git && \
    cd yay-bin && sudo -u yaybuilder makepkg -si --noconfirm" |& tee log
  log "Updating system via yay"
  arch-chroot /mnt sudo -u yaybuilder yay -Syu --noconfirm |& tee log
  log "Installing additional software"
  additional_packages=$(tr <<<"${additional_packages}" " " "\n" | sort | uniq \
    | tr "\n" " ")
  arch-chroot /mnt sudo -u yaybuilder yay -Sy ${additional_packages} --needed \
    --noconfirm |& tee log
  log "Finished installing additional software"

  # Clean things up
  arch-chroot /mnt sudo -u yaybuilder yay -Yc --noconfirm |& tee log
  arch-chroot /mnt userdel -r yaybuilder |& tee log
  arch-chroot /mnt rm -v /etc/passwd- |& tee log
  arch-chroot /mnt rm -v /etc/sudoers.d/yaybuilder |& tee log
  arch-chroot /mnt rm -rv yaytemp |& tee log
  log "User 'yaybuilder' deleted"
}
