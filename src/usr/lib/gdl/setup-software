#!/bin/bash

select_additional_software() {
  software=""

  # Misc. Games
  op_title="Misc. ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "lutris" "${software_lutris}" ON \
    "steam" "${software_steam}" ON \
    "itch" "(AUR) ${software_itch}" OFF \
    "legendary" "(AUR) ${software_legendary}" OFF \
    "playonlinux" "${software_playonlinux}" OFF \
    "libretro" "${software_libretro}" OFF \
    "dosbox" "${software_dosbox}" OFF \
    "scummvm" "${software_scummvm}" OFF)" "
  if (grep <<<"${software}" "lutris" &>/dev/null); then
    BASE_PACKAGES+="${LUTRIS_PACKAGES} " # install with base
  fi
  if (grep <<<"${software}" "steam" &>/dev/null); then
    BASE_PACKAGES+="steam steam-native-runtime " # install with base
  fi

  # Action Games
  op_title="Action ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "supertux" "${software_supertux}" OFF \
    "frogatto" "${software_frogatto}" OFF \
    "alex4" "${software_alex4}" OFF \
    "asciiportal" "${software_asciiportal}" OFF \
    "mari0" "${software_mari0}" OFF \
    "xonotic" "${software_xonotic}" OFF \
    "warsow" "${software_warsow}" OFF \
    "sauerbraten" "${software_sauerbraten}" OFF \
    "assaultcube-reloaded" "(AUR) ${software_assaultcube_reloaded}" OFF \
    "openarena" "(AUR) ${software_openarena}" OFF \
    "astromenace" "${software_astromenace}" OFF \
    "chromium-bsu" "${software_chromium_bsu}" OFF \
    "starfighter" "(AUR) ${software_starfighter}" OFF \
    "teeworlds" "${software_teeworlds}" OFF \
    "bzflag" "(AUR) ${software_bzflag}" OFF)" "

  # Adventure Games
  op_title="Adventure ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "bass" "${software_bass}" OFF \
    "fotaq" "(AUR) ${software_fotaq}" OFF \
    "lure" "(AUR) ${software_lure}" OFF \
    "drascula" "(AUR) ${software_drascula}" OFF \
    "zsdx" "(AUR) ${software_zsdx}" OFF \
    "sdlpop" "(AUR) ${software_sdlpop}" OFF \
    "zork1" "(AUR) ${software_zork1}" OFF \
    "zork2" "(AUR) ${software_zork2}" OFF \
    "zork3" "(AUR) ${software_zork3}" OFF \
    "open-adventure" "(AUR) ${software_open_adventure}" OFF)" "
  if (grep <<<"${software}" "drascula"); then
    software+="drascula-audio "
  fi

  # Roleplaying Games (RPGs)
  op_title="Roleplaying ${games} (RPGs)"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "openmw" "${software_openmw}" OFF \
    "openmw-tes3mp" "(AUR) ${software_openmw_tes3mp}" OFF \
    "daggerfall-unity-aur-bin" "(AUR) ${software_daggerfall_unity_aur_bin}" OFF \
    "freedroidrpg" "${software_freedroidrpg}" OFF \
    "flare-game" "(AUR) ${software_flare_game}" OFF \
    "naev" "${software_naev}" OFF \
    "rogue" "${software_rogue}" OFF \
    "angband" "${software_angband}" OFF \
    "umoria" "(AUR) ${software_umoria}" OFF \
    "nethack" "${software_nethack}" OFF \
    "tome4" "(AUR) ${software_tome4}" OFF \
    "stone-soup" "${software_stone_soup}" OFF \
    "cataclysm-dda-tiles" "${software_cataclysm_dda_tiles}" OFF \
    "doomrl" "(AUR) ${software_doomrl}" OFF \
    "planeshift" "(AUR) ${software_planeshift}" OFF \
    "runescape-launcher" "(AUR) ${software_runescape_launcher}" OFF \
    "runelite" "(AUR) ${software_runelite}" OFF \
    "manaplus" "${software_manaplus}" OFF)" "

  # Strategy Games
  op_title="Strategy ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "0ad" "${software_0ad}" OFF \
    "widelands" "${software_widelands}" OFF \
    "megaglest" "${software_megaglest}" OFF \
    "warzone2100" "${software_warzone2100}" OFF \
    "boswars" "(AUR) ${software_boswars}" OFF \
    "curseofwar" "${software_curseofwar}" OFF \
    "pingus" "${software_pingus}" OFF \
    "wesnoth" "${software_wesnoth}" OFF \
    "hedgewars" "${software_hedgewars}" OFF \
    "warmux" "(AUR) ${software_warmux}" OFF \
    "freeciv" "${software_freeciv}" OFF \
    "singularity" "${software_singularity}" OFF)" "

  # Racing Games
  op_title="Racing ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "supertuxkart" "${software_supertuxkart}" OFF \
    "extremetuxracer" "${software_extremetuxracer}" OFF \
    "armagetronad" "${software_armagetronad}" OFF \
    "gltron" "(AUR) ${software_gltron}" OFF \
    "torcs" "(AUR) ${software_torcs}" OFF)" "

  # Simulation/Construction/Management Games
  op_title="Simulation/Construction/Management ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "dwarffortress" "${software_dwarffortress}" OFF \
    "lincity-ng" "${software_lincity_ng}" OFF \
    "simutrans" "${software_simutrans}" OFF \
    "flightgear" "${software_flightgear}" OFF \
    "minetest" "${software_minetest}" OFF \
    "minecraft-launcher" "(AUR) ${software_minecraft_launcher}" OFF)" "

  # Development/Programming Software
  op_title="Game Dev & ${program_msg}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "godot" "${software_godot}" OFF \
    "love" "${software_love}" OFF \
    "solarus" "${software_solarus}" OFF \
    "spring" "${software_spring}" OFF \
    "unityhub" "(AUR) ${software_unityhub}" OFF \
    "unreal-engine" "(AUR) ${software_unreal_engine}" OFF \
    "tiled" "${software_tiled}" OFF \
    "android-studio" "(AUR) ${software_android_studio}" OFF \
    "allegro" "${software_allegro}" OFF \
    "python-pygame" "${software_python_pygame}" OFF \
    "panda3d" "(AUR) ${software_panda3d}" OFF \
    "pygtk" "(AUR) ${software_pygtk}" OFF \
    "scratch" "${software_scratch}" OFF \
    "atom" "${software_atom}" OFF \
    "code" "${software_code}" OFF \
    "geany" "${software_geany}" OFF \
    "emacs" "${software_emacs}" OFF)" "

  # Graphics/Drawing/Modeling Software
  op_title="${graphic_msg}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "gimp" "${software_gimp}" OFF \
    "inkscape" "${software_inkscape}" OFF \
    "blender" "${software_blender}" OFF \
    "goxel" "(AUR) ${software_goxel}" OFF \
    "magicavoxel" "(AUR) ${software_magicavoxel}" OFF \
    "libresprite" "(AUR) ${software_libresprite}" OFF \
    "aseprite" "(AUR) ${software_aseprite}" OFF \
    "mtpaint" "${software_mtpaint}" OFF \
    "mypaint" "${software_mypaint}" OFF \
    "krita" "${software_krita}" OFF)" "

  # Multimedia Software
  op_title="${multimedia_msg}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "obs-studio" "${software_obs_studio}" OFF \
    "openshot" "${software_openshot}" OFF \
    "kdenlive" "${software_kdenlive}" OFF \
    "simplescreenrecorder" "${software_simplescreenrecorder}" OFF \
    "youtube-dl" "${software_youtube_dl}" OFF \
    "vlc" "${software_vlc}" OFF \
    "spotify" "(AUR) ${software_spotify}" OFF \
    "audacity" "${software_audacity}" OFF \
    "lmms" "${software_lmms}" OFF \
    "pulseaudio-equalizer" "${software_pulseaudio_equalizer}" OFF)" "

  # Internet Software
  op_title="${internet_msg}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "firefox" "${software_firefox}" ON \
    "chromium" "${software_chromium}" OFF \
    "google-chrome" "${software_google_chrome}" OFF \
    "opera" "${software_opera}" OFF \
    "brave-bin" "(AUR) ${software_brave_bin}" OFF \
    "discord" "${software_discord}" OFF \
    "slack-desktop" "(AUR) ${software_slack_desktop}" OFF \
    "hexchat" "${software_hexchat}" OFF \
    "transmission-gtk" "${software_transmission_gtk}" OFF \
    "piavpn-bin" "(AUR) ${software_piavpn_bin}" OFF \
    "w3m" "${software_w3m}" OFF \
    "lynx" "${software_lynx}" OFF \
    "minitube" "${software_minitube}" OFF \
    "filezilla" "${software_filezilla}" OFF \
    "evolution" "${software_evolution}" OFF \
    "thunderbird" "${software_thunderbird}" OFF)" "
  if (grep <<<"${software}" "firefox" &>/dev/null) && [ -n "${bro}" ]; then
    software+="firefox-i18n-${bro} "
  fi
  if (grep <<<"${software}" "thunderbird" &>/dev/null) && [ -n "${bro}" ] &&
      [ "${bro}" != "lv" ]; then
    software+="thunderbird-i18n-${bro} "
  fi

  # Utilities
  op_title="${util}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "htop" "${software_htop}" ON \
    "gtop" "${software_gtop}" OFF \
    "bashtop" "${software_bashtop}" OFF \
    "mangohud" "(AUR) ${software_mangohud}" OFF \
    "gparted" "${software_gparted}" OFF \
    "gnome-disk-utility" "${software_gnome_disk_utility}" OFF \
    "baobab" "${software_baobab}" OFF \
    "innoextract" "${software_innoextract}" OFF \
    "virtualbox" "${software_virtualbox}" OFF \
    "vmware-workstation" "(AUR) ${software_vmware_workstation}" OFF \
    "insync" "(AUR) ${software_insync}" OFF \
    "pcloud-drive" "(AUR) ${software_pcloud_drive}" OFF \
    "timeshift" "(AUR) ${software_timeshift}" OFF \
    "luckybackup" "(AUR) ${software_luckybackup}" OFF \
    "authy" "(AUR) ${software_authy}" OFF \
    "clamav" "${software_clamav}" OFF \
    "ranger" "${software_ranger}" OFF \
    "bleachbit" "${software_bleachbit}" OFF)" "
  if (grep <<<"${software}" "mangohud" &>/dev/null); then
    software+="lib32-mangohud "
  fi

  # Fonts and Language Input
  op_title="${fonts}, etc."
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "\n${software_msg}" 0 0 0 \
    "bdf-unifont" "${software_bdf_unifont}" OFF \
    "noto-fonts-cjk" "${software_noto_fonts_cjk}" OFF \
    "ibus-libpinyin" "${software_ibus_libpinyin}" OFF \
    "ibus-anthy" "${software_ibus_anthy}" OFF \
    "ibus-hangul" "${software_ibus_hangul}" OFF)" "
  if (grep <<<"${software}" "ibus" &>/dev/null); then
    echo -e "export GTK_IM_MODULE=ibus\nexport QT_IM_MODULE=ibus\nexport \
XMODIFIERS=@im=ibus\nibus-daemon -drx" >>"${GDL_DIR}"/extra/skel/.xprofile
  fi

  # Add selected software to package list
  download=$(echo "${software}" | sed 's/\"//g' | tr ' ' '\n' | nl |
    sort -u -k2 | sort -n | cut -f2- | sed 's/$/ /g' | tr -d '\n')
  download_list=$(echo "${download}" | sed -e 's/^[ \t]*//')
  log "Adding selected software: ${download_list}"
  AUR_AND_OPTIONAL_PACKAGES+="${download_list} "
}

install_additional_software() {
  # Create a special temporary user for installing and using yay (AUR helper)
  clear
  dragonsay "Setting up AUR support..." |& tee -a "${LOG_FILE}"
  log "Creating temporary user: 'yaybuilder'"
  newpass=$(< /dev/urandom tr -dc "@#*%&_A-Z-a-z-0-9" | head -c16)
  arch-chroot /mnt mkdir -v yaytemp
  arch-chroot /mnt chmod 777 yaytemp
  arch-chroot /mnt useradd -rNM -d /yaytemp -s /usr/bin/nologin yaybuilder
  arch-chroot /mnt sh -c "echo -e '$newpass\n$newpass\n' | passwd yaybuilder"
  log "Adding 'yaybuilder' to sudoers.d"
  arch-chroot /mnt sh -c "echo 'yaybuilder ALL=(ALL) NOPASSWD: ALL' |
    tee /etc/sudoers.d/yaybuilder"
  arch-chroot /mnt sh -c "echo 'root ALL=(yaybuilder) NOPASSWD: ALL' |
    tee -a /etc/sudoers.d/yaybuilder"

  # Install yay, update, then install additional packages using yay
  log "Installing yay (AUR helper)"
  arch-chroot /mnt sh -c "cd yaytemp &&
    sudo -u yaybuilder git clone https://aur.archlinux.org/yay-bin.git &&
    cd yay-bin && sudo -u yaybuilder makepkg -si --noconfirm" |&
    tee -a "${LOG_FILE}"
  arch-chroot /mnt sudo -u yaybuilder yay -Syu --noconfirm |&
    tee -a "${LOG_FILE}"
  AUR_AND_OPTIONAL_PACKAGES=$(tr <<<"${AUR_AND_OPTIONAL_PACKAGES}" " " "\n" |
    sort | uniq | tr "\n" " ")
  dragonsay "Installing additional software..." |& tee -a "${LOG_FILE}"
  for package in ${AUR_AND_OPTIONAL_PACKAGES}; do
    arch-chroot /mnt sudo -u yaybuilder yay -S "${package}" --needed \
      --noconfirm |& tee -a "${LOG_FILE}"
  done
  log "Finished installing additional software"

  # Clean things up
  log "Cleaning up..."
  arch-chroot /mnt sudo -u yaybuilder yay -Yc --noconfirm |&
    tee -a "${LOG_FILE}"
  arch-chroot /mnt userdel -f yaybuilder |& tee -a "${LOG_FILE}"
  log "User 'yaybuilder' deleted"
  arch-chroot /mnt rm /etc/passwd-
  arch-chroot /mnt rm /etc/sudoers.d/yaybuilder
  arch-chroot /mnt rm -r yaytemp
  log "Cleanup complete"
}
