#!/bin/bash

select_additional_software() {
  software=""

  # Games (multiple categories)
  op_title="Misc. ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "steam" "${game10}" OFF \
    "itch" "(AUR) Manage itch.io games" OFF \
    "legendary" "(AUR) Open source replacement for the Epic Games Launcher" OFF \
    "libretro" "RetroArch + emulation cores" OFF \
    "dosbox" "Emulator for DOS games" OFF \
    "aisleriot" "${game11}" OFF)" "
  if (grep <<<"${software}" "steam" &>/dev/null); then
    software+="steam-native-runtime "
  fi
  if (grep <<<"${software}" "libretro" &>/dev/null); then
    software+="libretro-dosbox-pure-git "
  fi
  op_title="Action ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "supertux" "${game5}" OFF \
    "frogatto" "2D platformer starring a quixotic frog" OFF \
    "alex4" "2D platformer starring Alex the Allegator" OFF \
    "asciiportal" "Text-based puzzle game inspired by Portal" OFF \
    "mari0" "Mario game with Portal gun mechanics" OFF \
    "xonotic" "${game9}" OFF \
    "warsow" "${game8}" OFF \
    "sauerbraten" "FPS that uses an improved version of the Cube engine" OFF \
    "assaultcube-reloaded" "(AUR) AssaultCube Reloaded, 3D FPS" OFF \
    "openarena" "(AUR) 3D FPS based on ioquake3" OFF \
    "astromenace" "Hardcore 3D space shooter" OFF \
    "chromium-bsu" "Fast-paced, top-down space shooter" OFF \
    "starfighter" "(AUR) Side-scrolling space shooter" OFF \
    "teeworlds" "Fast-paced multiplayer 2D shooter" OFF \
    "bzflag" "${game2}" OFF)" "
  op_title="Adventure ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "bass" "Beneath A Steel Sky, point-and-click sci-fi thriller" OFF \
    "fotaq" "(AUR) Flight of the Amazon Queen, point-and-click adventure game" OFF \
    "lure" "(AUR) Lure of the Temptress, fantasy point-and-click adventure" OFF \
    "drascula" "(AUR) Drascula: The Vampire Strikes Back, comical point-and-click adventure" OFF \
    "scummvm" "'VM' for point-and-click adventure games" OFF \
    "zsdx" "(AUR) Fan-made Zelda game: Mystery of Solarus DX" OFF \
    "zork1" "(AUR) Zork I text adventure" OFF \
    "zork2" "(AUR) Zork II text adventure" OFF \
    "zork3" "(AUR) Zork III text adventure" OFF \
    "open-adventure" "(AUR) Colossal Cave Adventure" OFF)" "
  if (grep <<<"${software}" "drascula"); then
    software+="drascula-audio "
  fi
  op_title="Roleplaying ${games} (RPGs)"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "openmw" "Open source engine for TES III: Morrowind" OFF \
    "openmw-tes3mp" "(AUR) Multiplayer functionality for OpenMW" OFF \
    "daggerfall-unity-aur-bin" "(AUR) TES II: Daggerfall, Unity rebuild" OFF \
    "freedroidrpg" "Sci-fi action-RPG starring Tux on future Earth" OFF \
    "flare-game" "(AUR) Fantasy action-RPG using the FLARE engine" OFF \
    "naev" "2D space sim action-RPG" OFF \
    "rogue" "The original ASCII dungeon crawler!" OFF \
    "angband" "Tolkien-based ASCII roguelike" OFF \
    "umoria" "(AUR) Earlier Tolkien-based ASCII roguelike" OFF \
    "nethack" "Another classic ASCII roguelike...with a pet!" OFF \
    "tome4" "(AUR) Tales of Maj'Eyal, graphical fantasy roguelike" OFF \
    "stone-soup" "Graphical fantasy roguelike" OFF \
    "cataclysm-dda-tiles" "Graphical post-apocalyptic roguelike" OFF \
    "doomrl" "(AUR) DOOM as a graphical roguelike" OFF \
    "planeshift" "(AUR) 3D fantasy MMORPG" OFF \
    "runescape-launcher" "(AUR) RuneScape 3D fantasy MMORPG" OFF \
    "runelite" "(AUR) 'Old School RuneScape'" OFF \
    "manaplus" "2D MMORPGs: Mana World, Evol Online, etc." OFF)" "
  op_title="Strategy ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "0ad" "0 A.D., a 3D historically-based RTS game" OFF \
    "warzone2100" "3D sci-fi RTS game" OFF \
    "hedgewars" "Turn-based artillery game similiar to Worms" OFF \
    "warmux" "(AUR) Turn-based artillery game" OFF \
    "megaglest" "3D RTS game in a fantastic world" OFF \
    "boswars" "(AUR) Futuristic RTS game" OFF \
    "wesnoth" "Fantasy turn-based strategy game" OFF \
    "freeciv" "Clone of the original Civilization game" OFF \
    "widelands" "Fantasy RTS game with emphasis on economy and transport" OFF \
    "warzone2100" "3D sci-fi RTS game" OFF \
    "singularity" "Endgame: Singularity, survival strategy game" OFF \
    "pingus" "Lemmings clone: level-based puzzle game" OFF \
    "curseofwar" "Fast, terminal-based RTS game (ncurses)" OFF)" "
  op_title="Racing ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "supertuxkart" "${game6}" OFF \
    "extremetuxracer" "Downhill racing game starring Tux" OFF \
    "armagetronad" "3D Tron-like lightcycle game" OFF \
    "gltron" "(AUR) 3D Tron-like lightcycle game" OFF \
    "torcs" "(AUR) 3D car-racing simulator using OpenGL" OFF)" "
  op_title="Simulation/Construction/Management ${games}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "dwarffortress" "Build a dwarven outpost or play as an adventurer" OFF \
    "lincity-ng" "City simulation game" OFF \
    "simutrans" "Transportation simulation game" OFF \
    "flightgear" "Flight simulator" OFF \
    "minetest" "Multiplayer infinite-world voxel sandbox" OFF \
    "minecraft-launcher" "(AUR) Official Minecraft launcher" OFF)" "

  # Development/programming software
  op_title="Game Development & ${program_msg}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "godot" "2D and 3D game engine" OFF \
    "love" "2D game engine" OFF \
    "solarus" "2D action-adventure/RPG engine" OFF \
    "spring" "3D RTS game engine" OFF \
    "unityhub" "(AUR) Unity 3D game engine hub" OFF \
    "unreal-engine" "(AUR) 3D game engine by Epic Games" OFF \
    "tiled" "2D tile map editor" OFF \
    "android-studio" "(AUR) Android IDE" OFF \
    "allegro" "Game programming library" OFF \
    "python-pygame" "Python library for 2D games" OFF \
    "panda3d" "(AUR) 3D game engine with Python bindings" OFF \
    "pygtk" "(AUR) Python bindings for GTK" OFF \
    "scratch" "Create interactive stories, games, and art" OFF \
    "atom" "${edit7}" OFF \
    "code" "Visual Studio Code (open source build)" OFF \
    "geany" "${edit1}" OFF \
    "emacs" "${edit0}" OFF)" "

  # Graphics/drawing/modeling software
  op_title="${graphic_msg}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "gimp" "${graphic2}" OFF \
    "inkscape" "${graphic9}" OFF \
    "blender" "${graphic0}" OFF \
    "goxel" "(AUR) Voxel editor" OFF \
    "magicavoxel" "(AUR) Voxel editor and path tracing renderer" OFF \
    "libresprite" "(AUR) Fork of last GPL version of aseprite" OFF \
    "aseprite" "(AUR) Create animated sprites and pixel art" OFF \
    "mtpaint" "${graphic10}" OFF \
    "mypaint" "${graphic11}" OFF \
    "krita" "Edit and paint images" OFF)" "

  # Multimedia software
  op_title="${multimedia_msg}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "obs-studio" "Free software for live streaming and recording" OFF \
    "openshot" "An award-winning free and open-source video editor" OFF \
    "kdenlive" "${media9}" OFF \
    "simplescreenrecorder" "${media3}" OFF \
    "audacity" "${audio0}" OFF \
    "lmms" "${audio5}" OFF \
    "spotify" "(AUR) Proprietary music streaming service" OFF \
    "youtube-dl" "${media12}" OFF \
    "pulseaudio-equalizer" "${audio11}" OFF)" "

  # Internet software
  op_title="${internet_msg}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "firefox" "${net2}" OFF \
    "chromium" "${net0}" OFF \
    "google-chrome" "Full version of Google Chrome" OFF \
    "opera" "${net5}" OFF \
    "discord" "All-in-one voice and text chat for gamers" OFF \
    "hexchat" "${net11}" OFF \
    "transmission-gtk" "${net8}" OFF \
    "piavpn-bin" "(AUR) Private Internet Access VPN client" OFF \
    "w3m" "Text-based Web browser and pager" OFF \
    "elinks" "${net3}" OFF \
    "lynx" "${net3}" OFF \
    "minitube" "${net4}" OFF \
    "filezilla" "${net1}" OFF \
    "thunderbird" "${net6}" OFF)" "
  if (grep <<<"${software}" "firefox" &>/dev/null) && [ -n "${bro}" ]; then
    software+="firefox-i18n-${bro} "
  fi
  if (grep <<<"${software}" "thunderbird" &>/dev/null) && [ -n "${bro}" ] &&
      [ "${bro}" != "lv" ]; then
    software+="thunderbird-i18n-${bro} "
  fi

  # Utilities
  op_title="${util}"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "htop" "${sys6}" ON \
    "gtop" "Visually-appealing system monitor" OFF \
    "bashtop" "Visually-appealing resource monitor" OFF \
    "mangohud" "(AUR) Vulkan overlay for FPS, CPU/GPU load, temp., etc." OFF \
    "gparted" "${sys4}" OFF \
    "innoextract" "Tool to extract installer files" OFF \
    "virtualbox" "${sys16}" OFF \
    "vmware-workstation" "(AUR) VMware Workstation Player/Pro" OFF \
    "insync" "(AUR) Unofficial Google Drive and OneDrive client" OFF \
    "pcloud-drive" "(AUR) pCloud client, electron edition" OFF \
    "timeshift" "(AUR) System restore utility" OFF \
    "luckybackup" "(AUR) Backup and sync tool" OFF \
    "authy" "(AUR) 2FA desktop application" OFF \
    "clamav" "Anti-virus toolkit for Unix" OFF \
    "ranger" "${sys20}" OFF \
    "bleachbit" "${sys22}" OFF)" "
  if (grep <<<"${software}" "mangohud" &>/dev/null); then
    software+="lib32-mangohud "
  fi

  # Fonts and language input
  op_title="${fonts}, etc."
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 0 0 0 \
    "bdf-unifont" "${font0}" OFF \
    "noto-fonts-cjk" "${font1}" OFF \
    "ibus-libpinyin" "Chinese input engine for IBus" OFF)" "
  if (grep <<<"${software}" "ibus-libpinyin" &>/dev/null); then
    sed -i 's/bashrc/&\n\nexport GTK_IM_MODULE=ibus\
export XMODIFIERS=@im=ibus\nexport QT_IM_MODULE=ibus\nibus-daemon -drx/' \
      "${GDL_DIR}"/extra/.bashrc
    if (! grep <<<"${software}" "noto-fonts-cjk" &>/dev/null); then
      software+="noto-fonts-cjk "
    fi
  fi

  # Theming
  op_title="Themes & Icons"
  software+=$(dialog --stdout --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "Already included: matcha-gtk-theme, surfn-icons-git\n\n${software_msg1}" 0 0 0 \
    "arc-gtk-theme" "Flat theme with transparent elements" OFF \
    "arc-icon-theme" "Arc icon theme" OFF \
    "adapta-gtk-theme" "Adaptive Gtk+ theme" OFF \
    "papirus-icon-theme" "Papirus icon theme" OFF \
    "sardi-icons" "(AUR) Sardi icon themes" OFF \
    "mint-themes" "(AUR) Mint theme collection" OFF \
    "mint-x-icons" "(AUR) Mint/metal icons" OFF \
    "mint-y-icons" "(AUR) Flat, colorful, modern icons" OFF \
    "surfn-mint-y-icons-git" "(AUR) Mint-Y with Surfn as main set" OFF \
    "numix-icon-theme-git" "(AUR) Base icons from the Numix project" OFF \
    "numix-circle-icon-theme-git" "(AUR) Circle icons from the Numix project" OFF \
    "menda-circle-icon-theme-git" "(AUR) Menda circle icons" OFF \
    "sweet-theme" "(AUR) Colorful Gtk3.20+ theme" OFF \
    "candy-icons-git" "(AUR) Sweet, colorful, gradient icons" OFF \
    "beautyline" "(AUR) Sweet, colorful, outlined icons" OFF \
    "vertex-themes" "(AUR) Vertex themes" OFF \
    "vertex-icons-git" "(AUR) Vertex icons" OFF)" "

  # Add selected software to package list
  download=$(echo "${software}" | sed 's/\"//g' | tr ' ' '\n' | nl |
    sort -u -k2 | sort -n | cut -f2- | sed 's/$/ /g' | tr -d '\n')
  download_list=$(echo "${download}" | sed -e 's/^[ \t]*//')
  log "Adding selected software: ${download_list}"
  AUR_AND_OPTIONAL_PACKAGES+="${download_list} "
}

install_additional_software() {
  # Create a special temporary user for installing and using yay (AUR helper)
  clear
  dragonsay "Setting up AUR support..." | tee -a "${LOG_FILE}"
  log "Creating temporary user: 'yaybuilder'"
  newpass=$(< /dev/urandom tr -dc "@#*%&_A-Z-a-z-0-9" | head -c16)
  arch-chroot /mnt mkdir -v yaytemp
  arch-chroot /mnt chmod 777 yaytemp
  arch-chroot /mnt useradd -rNM -d /yaytemp -s /usr/bin/nologin yaybuilder
  arch-chroot /mnt sh -c "echo -e '$newpass\n$newpass\n' | passwd yaybuilder"
  log "Adding 'yaybuilder' to sudoers.d"
  arch-chroot /mnt sh -c "echo 'yaybuilder ALL=(ALL) NOPASSWD: ALL' |
    tee /etc/sudoers.d/yaybuilder"
  arch-chroot /mnt sh -c "echo 'root ALL=(yaybuilder) NOPASSWD: ALL' |
    tee -a /etc/sudoers.d/yaybuilder"

  # Install yay, update, then install additional packages using yay
  log "Installing yay (AUR helper)"
  arch-chroot /mnt sh -c "cd yaytemp &&
    sudo -u yaybuilder git clone https://aur.archlinux.org/yay-bin.git &&
    cd yay-bin && sudo -u yaybuilder makepkg -si --noconfirm" |&
    tee -a "${LOG_FILE}"
  arch-chroot /mnt sudo -u yaybuilder yay -Syu --noconfirm |&
    tee -a "${LOG_FILE}"
  AUR_AND_OPTIONAL_PACKAGES=$(tr <<<"${AUR_AND_OPTIONAL_PACKAGES}" " " "\n" |
    sort | uniq | tr "\n" " ")
  dragonsay "Installing additional software..." | tee -a "${LOG_FILE}"
  for package in ${AUR_AND_OPTIONAL_PACKAGES}; do
    arch-chroot /mnt sudo -u yaybuilder yay -S "${package}" --needed \
      --noconfirm |& tee -a "${LOG_FILE}"
  done
  log "Finished installing additional software"

  # Clean things up
  log "Cleaning up..."
  arch-chroot /mnt sudo -u yaybuilder yay -Yc --noconfirm |&
    tee -a "${LOG_FILE}"
  arch-chroot /mnt userdel -f yaybuilder |& tee -a "${LOG_FILE}"
  log "User 'yaybuilder' deleted"
  arch-chroot /mnt rm /etc/passwd-
  arch-chroot /mnt rm /etc/sudoers.d/yaybuilder
  arch-chroot /mnt rm -r yaytemp
  log "Cleanup complete"
}
