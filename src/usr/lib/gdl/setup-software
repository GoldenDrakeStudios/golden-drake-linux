#!/usr/bin/env bash

add_software() {
  op_title="${software_op_msg}"
  software=""

  # Games
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 70 10 \
    "steam" "${game10}" ON \
    "supertux" "${game5}" ON \
    "supertuxkart" "${game6}" ON \
    "aisleriot" "${game11}" OFF \
    "bsd-games" "${game1}" OFF \
    "bzflag" "${game2}" OFF \
    "gnuchess" "${game4}" OFF \
    "warsow" "${game8}" OFF \
    "xonotic" "${game9}" OFF 3>&1 1>&2 2>&3)" "
  if (grep <<<"${software}" "steam" &>/dev/null); then
    software+=" steam-native-runtime ttf-liberation"
    cat /etc/pacman.conf | sed -e "/\[multilib\]/,/Include/"'s/^#//' | \
      cat >/etc/pacman.conf.bak
    cp /etc/pacman.conf.bak /etc/pacman.conf
  fi

  # Development software
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "python" "${prg11}" OFF \
    "ruby" "${prg12}" OFF \
    "jdk-openjdk" "${prg15}" OFF \
    "jdk8-openjdk" "${prg7}" OFF \
    "jdk11-openjdk" "${prg14}" OFF \
    "java-runtime-common" "${prg5}" OFF \
    "java-openjfx" "${prg8}" OFF \
    "php" "${prg10}" OFF \
    "clisp" "${prg0}" OFF \
    "dmd" "${prg1}" OFF \
    "dart" "${prg2}" OFF \
    "go" "${prg3}" OFF \
    "go-tools" "${prg4}" OFF \
    "perl" "${prg9}" OFF \
    "scala" "${prg13}" OFF 3>&1 1>&2 2>&3)" "

  # Graphics/drawing software
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "gimp" "${graphic2}" ON \
    "inkscape" "${graphic9}" ON \
    "blender" "${graphic0}" ON \
    "darktable" "${graphic1}" OFF \
    "graphicsmagick" "${graphic8}" OFF \
    "graphviz" "${graphic3}" OFF \
    "imagemagick" "${graphic4}" OFF \
    "mtpaint" "${graphic10}" OFF \
    "mypaint" "${graphic11}" OFF \
    "feh" "${graphic6}" OFF \
    "rawtherapee" "${graphic7}" OFF 3>&1 1>&2 2>&3)" "

  # Multimedia software
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "vlc" "${media6}" ON \
    "multimedia-codecs" "${media8}" ON \
    "kdenlive" "${media9}" OFF \
    "byzanz" "${media10}" OFF \
    "handbrake" "${media0}" OFF \
    "mplayer" "${media1}" OFF \
    "mpv" "${media7}" OFF \
    "pitivi" "${media2}" OFF \
    "simplescreenrecorder" "${media3}" OFF \
    "smplayer" "${media4}" OFF \
    "snappy-player" "${media11}" OFF \
    "totem" "${media5}" OFF \
    "youtube-dl" "${media12}" OFF 3>&1 1>&2 2>&3)" "
#  if (grep <<<"${software}" "vlc"); then
#    software+=" qt5 phonon-qt5-vlc" #vlc-plugin-fluidsynth
#  fi
  if (grep <<<"${software}" "multimedia-codecs"); then
    software=$(sed <<<"${software}" 's/multimedia-codecs/gst-plugins-bad
      gst-plugins-base gst-plugins-good gst-plugins-ugly ffmpegthumbnailer
      gst-libav/')
  fi

  # Audio software
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "audacity" "${audio0}" ON \
    "audacious" "${audio1}" OFF \
    "clementine" "${audio10}" OFF \
    "cmus" "${audio2}" OFF \
    "jack2" "${audio3}" OFF \
    "projectm" "${audio4}" OFF \
    "lmms" "${audio5}" OFF \
    "mpd" "${audio6}" OFF \
    "ncmpcpp" "${audio7}" OFF \
    "pianobar" "${audio9}" OFF \
    "pavucontrol" "${audio8}" OFF \
    "pulseaudio-equalizer" "${audio11}" OFF \
    "qmmp" "${audio13}" OFF \
    "rhythmbox" "${audio14}" OFF 3>&1 1>&2 2>&3)" "

  # Internet software
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "firefox" "${net2}" ON \
    "chromium" "${net0}" ON \
    "transmission-gtk" "${net8}" ON \
    "hexchat" "${net11}" ON \
    "opera" "${net5}" OFF \
    "elinks" "${net3}" OFF \
    "lynx" "${net3}" OFF \
    "irssi" "${net9}" OFF \
    "midori" "${net12}" OFF \
    "minitube" "${net4}" OFF \
    "filezilla" "${net1}" OFF \
    "thunderbird" "${net6}" OFF 3>&1 1>&2 2>&3)" "
  if (grep <<<"${software}" "firefox" &>/dev/null) && [ -n "${bro}" ]; then
    software+=" firefox-i18n-${bro}"
  fi
  if (grep <<<"${software}" "thunderbird" &>/dev/null) && [ -n "${bro}" ] &&
      [ "${bro}" != "lv" ]; then
    software+=" thunderbird-i18n-${bro}"
  fi

  # Office software
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "libreoffice-fresh" "${office4}" ON \
    "libreoffice-still" "${office5}" OFF \
    "abiword" "${office0}" OFF \
    "calligra" "${office1}" OFF \
    "evince" "${office9}" OFF \
    "gnumeric" "${office3}" OFF \
    "glabels" "${office10}" OFF \
    "gobby" "${office8}" OFF \
    "mupdf" "${office6}" OFF \
    "scribus" "${office11}" OFF \
    "zathura" "${office7}" OFF 3>&1 1>&2 2>&3)" "
  if (grep <<<"${software}" "libreoffice-fresh" &>/dev/null) &&
      [ -n "${lib}" ]; then
    software+=" libreoffice-fresh-${lib}"
  fi
  if (grep <<<"${software}" "libreoffice-still" &>/dev/null) &&
      [ -n "${lib}" ]; then
    software+=" libreoffice-still-${lib}"
  fi

  # Text editors
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "atom" "${edit7}" ON \
    "emacs" "${edit0}" OFF \
    "geany" "${edit1}" OFF \
    "gedit" "${edit2}" OFF \
    "gvim" "${edit3}" OFF \
    "mousepad" "${edit4}" OFF \
    "neovim" "${edit5}" OFF \
    "vim" "${edit6}" OFF \
    "zim" "${edit8}" OFF 3>&1 1>&2 2>&3)" "

  # Fonts
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "bdf-unifont" "${font0}" OFF \
    "noto-fonts-cjk" "${font1}" OFF 3>&1 1>&2 2>&3)" "

  # Terminals
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "terminator" "${term5}" ON \
    "cool-retro-term" "${term12}" ON \
    "guake" "${term1}" OFF \
    "kmscon" "${term2}" OFF \
    "pantheon-terminal" "${term3}" OFF \
    "rxvt-unicode" "${term4}" OFF \
    "screen" "${sys11}" OFF \
    "terminology" "${term10}" OFF \
    "termite" "${term9}" OFF \
    "tilda" "${term11}" OFF \
    "tilix" "${term13}" oFF \
    "tmux" "${sys14}" OFF \
    "xfce4-terminal" "${term6}" OFF \
    "yakuake" "${term7}" OFF 3>&1 1>&2 2>&3)" "

  # Servers
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "cups" "${srv11}" ON \
    "openssh" "${sys10}" ON \
    "bind" "${srv10}" OFF \
    "lighttpd" "${srv5}" OFF \
    "postfix" "${srv6}" OFF \
    "samba" "${srv9}" OFF \
    "squid" "${srv8}" OFF \
    "vsftpd" "${srv7}" OFF 3>&1 1>&2 2>&3)" "
  if (grep "cups" <<<"${software}" &>/dev/null); then
    software=$(sed <<<"${software}" 's/cups/cups cups-pdf/')
    if (yesno "\n${cups_msg}" "${yes}" "${no}"); then
      enable_cups=true
    fi
  fi
  if (grep "openssh" <<<"${software}" &>/dev/null); then
    if (yesno "\n${ssh_msg}" "${yes}" "${no}"); then
      enable_ssh=true
    fi
  fi
  if ! "${enable_ftp}"; then
    if (yesno "\n${ftp_msg}" "${yes}" "${no}"); then
      enable_ftp=true
      if (grep <<<"${software}" "vsftpd" &>/dev/null); then
        ftp="vsftpd"
      else
        ftp="ftpd"
      fi
    fi
  fi

  # Database software
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 63 10 \
    "couchdb" "${db0}" OFF \
    "mariadb" "${sys30}" OFF \
    "percona-server" "${db2}" OFF \
    "phpmyadmin" "${sys32}" OFF \
    "php-sqlite" "${db3}" OFF \
    "postgresql" "${sys31}" OFF \
    "redis" "${db4}" OFF \
    "sqlite" "${db6}" OFF 3>&1 1>&2 2>&3)" "

  # Utilities
  software+=$(dialog --ok-button "${ok}" --cancel-button "${cancel}" \
    --checklist "${software_msg1}" 20 65 10 \
    "htop" "${sys6}" ON \
    "gparted" "${sys4}" ON \
    "wget" "${sys18}" ON \
    "bc" "${sys25}" OFF \
    "bleachbit" "${sys22}" OFF \
    "conky" "${sys2}" OFF \
    "dmenu" "${sys19}" OFF \
    "galculator" "${sys24}" OFF \
    "gnome-packagekit" "${sys26}" OFF \
    "gnome-software" "${sys27}" OFF \
    "gpm" "${sys5}" OFF \
    "k3b" "${sys8}" OFF \
    "nmap" "${sys9}" OFF \
    "ntfs-3g" "${sys28}" OFF \
    "pcmanfm" "${sys21}" OFF \
    "ranger" "${sys20}" OFF \
    "scrot" "${sys13}" OFF \
    "tuxcmd" "${sys15}" OFF \
    "virtualbox" "${sys16}" OFF \
    "xscreensaver" "${sys34}" OFF 3>&1 1>&2 2>&3)" "

  if [ -z "${software}" ]; then
    if ! (yesno "\n${software_noconfirm_msg} ${software_menu}?" "${yes}" \
        "${no}" 1); then
      skip=true
    fi
  else
    new_software=$(echo "${software}" | sed 's/\"//g')
    software_list=$(echo "${new_software}" | sed -e 's/^[ \t]*//')
    pacman -Sy --print-format='%s' "${new_software}" | awk \
      '{s+=$1} END {print s/1024/1024}' >/tmp/size &
    pid=$! pri=0.1 msg="${wait_load}\n\n \Z1> \Z3pacman -Sy --print-format\Zn" \
      load

    download_size=$(</tmp/size)
    rm /tmp/size
    software_size=$(sed <<<"${download_size}" 's/\(\..\)\(.*\)/\1 MiB/')
    software_int=$(echo "${new_software}" | wc -w)
    source "${lang_file}"

    if [ "${software_int}" -lt "15" ]; then
      height=14
    else
      height=16
    fi

    final_software+="${software} "
  fi

  # Install all selected software
  if [ -z "${final_software}" ]; then
    if (yesno "\n${software_warn_msg}" "${yes}" "${no}" 1); then
      break
    fi
  else
    download=$(echo "${final_software}" | sed 's/\"//g' | tr ' ' '\n' | nl | \
      sort -u -k2 | sort -n | cut -f2- | sed 's/$/ /g' | tr -d '\n')
    download_list=$(echo "${download}" | sed -e 's/^[ \t]*//')
    if ! "${menu_enter}"; then
      log "Add software list: ${download}"
      base_install+="${download_list} "
      unset final_software
      break
    else
      pacman -Sy --print-format='%s' "${download}" | awk \
        '{s+=$1} END {print s/1024/1024}' >/tmp/size &
      pid=$! pri=0.1 msg="${wait_load}\n\n \Z1> \Z3pacman -S --print-format\Zn"\
        load
      download_size=$(</tmp/size)
      rm /tmp/size
      export software_size
      software_size=$(sed <<<"${download_size}" 's/\(\..\)\(.*\)/\1 MiB/')
      export software_int
      software_int=$(echo "${download}" | wc -w)
      cal_rate
      if [ "${software_int}" -lt "20" ]; then
        height=17
      else
        height=20
      fi
      if (yesno "\n${software_confirm_var1}" "${install}" "${cancel}"); then
        arch-chroot "${ARCH}" pacman --noconfirm -Sy archlinux-keyring | log &
        arch-chroot "${ARCH}" pacman --noconfirm -Sy "${download}" | log &
        pid=$! pri=$(sed <<<"${down}" 's/\..*$//') msg="\n${software_load_var}"\
          load_log
        log "Finished installing software"
        unset final_software
        break
      else
        unset final_software
      fi
    fi
  fi
}
