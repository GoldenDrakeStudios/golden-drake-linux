#!/usr/bin/env bash

reboot_system() {
  op_title="${complete_op_msg}"
  # Check if system is installed
  if "${INSTALLED}"; then
    # Check if user has a bootloader installed
    if [ "${bootloader}" = "${none}" ]; then
      if (yesno "\n${complete_no_boot_msg}" "${yes}" "${no}"); then
        clear
        exit
      fi
    fi

    # Begin reboot menu loop
    while (true); do
      # Prompt for user input
      reboot_menu="$(dialog --nocancel --ok-button "${ok}" --menu \
        "${complete_msg}" 16 60 7 \
        "${reboot0}" "-" \
        "${reboot6}" "-" \
        "${reboot2}" "-" \
        "${reboot1}" "-" \
        "${reboot4}" "-" 3>&1 1>&2 2>&3)"

      # Execute user input
      case "${reboot_menu}" in
      "${reboot0}") # Reboot
        clear
        umount -R /mnt
        reboot
        exit
        ;;
      "${reboot6}") # Poweroff
        clear
        umount -R /mnt
        poweroff
        exit
        ;;
      "${reboot2}") # Chroot
        clear
        echo -e "${arch_chroot_msg}"
        arch-chroot /mnt bash
        reboot_system
        ;;
      "${reboot1}") # Unmount system and exit to command line
        clear
        umount -R /mnt
        exit
        ;;
      "${reboot4}") # Show install log
        less "${LOG_FILE}"
        ;;
      esac
    done
  else
    # Warn user install incomplete, prompt for reboot
    if (yesno "${not_complete_msg}" "${yes}" "${no}"); then
      clear
      umount -R /mnt
      reboot
      exit
    fi
  fi
}

main_menu() {
  op_title="${menu_op_msg}"
  while (true); do
    menu_item="$(dialog --nocancel --ok-button "${ok}" \
      --menu "${menu}" 19 60 8 \
      "${menu0}" "-" \
      "${menu1}" "-" \
      "${menu2}" "-" \
      "${menu3}" "-" \
      "${menu5}" "-" \
      "${menu11}" "-" \
      "${menu12}" "-" 3>&1 1>&2 2>&3)"

    case "${menu_item}" in
    "${menu0}") # Set system locale
      set_locale
      ;;
    "${menu1}") # Set system time zone
      set_zone
      ;;
    "${menu2}") # Set system keymap
      set_keys
      ;;
    "${menu3}") # Prepare drives check if mounted
      if "${mounted}"; then
        if (yesno "\n${menu_err_msg3}" "${yes}" "${no}" 1); then
          mounted=false
          prepare_drives
        fi
      else
        prepare_drives
      fi
      ;;
    "${menu5}") # Begin base install
      if "${mounted}"; then
        install_arch_linux
      elif (yesno "\n${install_err_msg1}" "${yes}" "${no}"); then
        prepare_drives
      fi
      ;;
    "${menu11}") # Reboot system function
      reboot_system
      ;;
    "${menu12}") # Exit installer
      if (yesno "\n${menu_exit_msg}" "${yes}" "${no}"); then
        clear
        exit
      fi
      ;;
    esac
  done
}
