#!/usr/bin/env bash

install_base() {
  op_title="${install_op_msg}"
  base_install=$(tr <<<"${base_install}" " " "\n" | sort | uniq | tr "\n" " ")
  # pacman -Sy --print-format='%s' $(echo "${base_install}") | awk \
  #   '{s+=$1} END {print s/1024/1024}' >/tmp/size &
  # pid=$! pri=0.6 msg="\n${pacman_load}\n\n \Z1> \Z3pacman -Sy\Zn" load
  # download_size="$(</tmp/size)"
  # rm /tmp/size
  # export software_size
  # software_size=$(sed <<<"${download_size}" 's/\(\..\)\(.*\)/\1 MiB/')
  # cal_rate
  log "Installing base packages"
  # base_install="$(pacman -Sqg base linux) ${base_install}"
  clear
  pacman -Sy
  pacstrap /mnt --overwrite $(echo "${base_install}") |& tee -a LOG_FILE
  # echo "$?" >/tmp/ex_status
  # pid=$! pri=$(echo "${down}" | sed 's/\..*$//') \
  #   msg="\n${install_load_var}" load_log
  if [ "$?" -eq "0" ]; then
    INSTALLED=true
    log "Completed base installation"
  else
    report_error
    exit 1
  fi
  genfstab -U -p /mnt >>/mnt/etc/fstab
  log "Generated fstab"
  grub_config
  log "Configured grub"
}

prepare_base() {
  op_title="${install_op_msg}"
  base_install="${default_packages} ${UCODE} "
  if "${wifi}" || (yesno "\n${wifi_option_msg}" "${yes}" "${no}" 1); then
    base_install+="wireless_tools wpa_supplicant "
    log "Added wireless utilities"
  fi
  if "${bluetooth}" && (yesno "\n${bluetooth_msg}" "${yes}" "${no}" 1); then
    base_install+="bluez bluez-utils pulseaudio-bluetooth "
    enable_bt=true
    log "Added bluetooth support"
  fi
  if (yesno "\n${os_prober_msg}" "${yes}" "${no}" 1); then
    base_install+="os-prober "
    log "Added os-prober"
  fi
  if "${enable_f2fs}"; then
    base_install+="f2fs-tools "
    log "Added f2fs-tools"
  fi
  if "${UEFI}"; then
    base_install+="efibootmgr "
    log "Added efibootmgr"
  fi
}
