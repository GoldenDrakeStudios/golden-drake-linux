#!/bin/bash

install_base() {
  if [ -n "${lib}" ]; then
    BASE_PACKAGES+="libreoffice-fresh-${lib} "
  fi
  if ENABLE_BTRFS; then
    BASE_PACKAGES+="grub-btrfs "
  fi
  BASE_PACKAGES=$(tr <<<"${BASE_PACKAGES}" " " "\n" | sort | uniq | tr "\n" " ")
  clear
  dragonsay "Installing base packages..." |& tee -a "${LOG_FILE}"
  pacman -Sy
  pacstrap /mnt ${BASE_PACKAGES} |& tee -a "${LOG_FILE}"
  if [ "$?" -eq "0" ]; then
    INSTALLATION_COMPLETE=true
    log "Completed base installation"
  else
    report_error
    clear
    dragonsay "${shell_prompt_msg1}"
    echo -e "${shell_prompt_msg2}"
    exit 1
  fi
  genfstab -U -p /mnt >>/mnt/etc/fstab |& tee -a "${LOG_FILE}"
  log "Generated fstab"
  grub_config
  log "Configured grub"
}

prepare_base() {
  op_title="${install_op_msg}"
  BASE_PACKAGES+="${UCODE} "
  if "${WIFI_AVAILABLE}" ||
      (yesno "\n${wifi_option_msg}" "${yes}" "${no}" 1); then
    BASE_PACKAGES+="wireless_tools wpa_supplicant "
    log "Added wireless utilities"
  fi
  if "${BLUETOOTH_AVAILABLE}"; then
    BASE_PACKAGES+="blueman bluez bluez-utils pulseaudio-bluetooth "
    log "Added bluetooth support"
  fi
  if "${LAPTOP}" || (yesno "\n${touchpad_msg}" "${yes}" "${no}"); then
    BASE_PACKAGES+="xf86-input-libinput "
    log "Added touchpad support"
  fi
  if (yesno "\n${os_prober_msg}" "${yes}" "${no}" 1); then
    BASE_PACKAGES+="os-prober "
    log "Added os-prober"
  fi
  if "${UEFI}"; then
    BASE_PACKAGES+="efibootmgr "
    log "Added efibootmgr"
  fi

  # Graphics and VM packages
  local additional_packages
  source "${LANG_FILE}"
  if "${VM}"; then
    case "${virt}" in
    qemu)
      additional_packages="spice-vdagent"
      log "Added QEMU guest utils"
      ;;
    vbox)
      additional_packages="virtualbox-guest-utils virtualbox-guest-dkms"
      log "Added VirtualBox guest utils"
      ;;
    vmware)
      additional_packages="xf86-video-vmware xf86-input-vmmouse open-vm-tools
        net-tools gtkmm"
      log "Added VMware guest utils"
      ;;
    hyper-v)
      additional_packages="xf86-video-fbdev"
      log "Added HyperV guest utils"
      ;;
    *)
      additional_packages="xf86-video-fbdev"
      log "Added generic VM guest utils"
      ;;
    esac
  else
    if "${NVIDIA}"; then
      additional_packages=$(dialog --stdout --ok-button "${ok}" \
        --cancel-button "${cancel}" --menu "\n${graphics_msg}" 18 60 6 \
        "${default}" "${graphics_default}" \
        "nvidia" "${graphics_nvidia}" \
        "xf86-video-nouveau" "${graphics_nouveau}" \
        "xf86-video-intel" "${graphics_intel}" \
        "xf86-video-vesa" "${graphics_vesa}") \
        "xf86-video-ati" "${graphics_ati}" \
        "xf86-video-amdgpu" "${graphics_amd}"
    else
      additional_packages=$(dialog --stdout --ok-button "${ok}" \
        --cancel-button "${cancel}" --menu "\n${graphics_msg}" 17 60 5 \
        "${default}" "${graphics_default}" \
        "xf86-video-ati" "${graphics_ati}" \
        "xf86-video-amdgpu" "${graphics_amd}" \
        "xf86-video-intel" "${graphics_intel}" \
        "xf86-video-nouveau" "${graphics_nouveau}" \
        "xf86-video-vesa" "${graphics_vesa}")
    fi
    if [ -z "${additional_packages}" ] ||
       [ "${additional_packages}" = "${default}" ]; then
      additional_packages="${DEFAULT_GRAPHICS_DRIVER}"
    fi
    if [ "${additional_packages}" = "nvidia" ]; then
      additional_packages+=" nvidia-libgl nvidia-utils lib32-nvidia-utils
        nvidia-settings nvidia-prime nvidia-dkms"
      NVIDIA_DRM=true
    elif [ "${additional_packages}" = "xf86-video-ati" ] ||
         [ "${additional_packages}" = "xf86-video-amdgpu" ]; then
      additional_packages+=" vulkan-radeon lib32-vulkan-radeon"
    elif [ "${additional_packages}" = "xf86-video-intel" ]; then
      additional_packages+=" vulkan-intel lib32-vulkan-intel
        lib32-libva-intel-driver"
    fi
    log "Graphics driver selected"
  fi
  BASE_PACKAGES+="${additional_packages} mesa lib32-mesa "
}
