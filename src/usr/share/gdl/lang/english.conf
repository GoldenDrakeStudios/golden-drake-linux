# GDL maintainer: David C. Drake
# Anarchy maintainers: Deadhead (Dylan Schacht) and Erazem Kokot

# Set the LANG variable to the correct UTF-8 locale for your language
LANG="en_US.UTF-8"

# Important:
# * Make sure you are using the UTF-8 encoding
# * Don't change the variable names (e.g. intro_msg=)
# * Don't remove any occurrence of (e.g. \n or \n\n - new lines)
# * Don't remove any special characters (e.g. $a, or quotes)
# * Don't edit variables within the text (e.g. /dev/${DRIVE} or ${user})

start_menu_msg="GDL is an installer for the Arch Linux distribution, not a distribution based on Arch. Because you are installing Arch, you can (and should) read the Arch Wiki (wiki.archlinux.org) before reporting any post-installation issues. If an error occurs during the installation, use the command 'cat /root/gdl.log | nc termbin.com 9999' in the terminal and share the returned URL along with a description of the issue on our GitHub."
start_menu_social="Website: https://goldendrakestudios.com/golden-drake-linux/\nGitHub: https://github.com/GoldenDrakeStudios/golden-drake-linux/"
force_quit_msg="Forcefully exited installer (ctrl+c), your system is in an unknown state and the installation may not have finished yet, so your installed system might not work. Check the logs (/root/gdl.log) for more info."

translate_this() {

  clear
}

translate_this_var() {

  clear
}

### ----------------------------------------------------------------------------

dialog_msg() {

  title=" -| Golden Drake Linux - Arch Installer |- "

  backtitle=" -| Golden Drake Linux |- "

}

main_msg() {

  error="\Z1Error:\Zn"

  yes="Yes"

  no="No"

  ok="Ok"

  cancel="Cancel"

  other="Other"

  default="Default"

  edit="Edit"

  back="Back"

  done_msg="Done"

  partition="Partition"

  size="Size"

  add="Add"

  new_user="New User"

  change_pass="Change-Password"

  change_fn="Change-Full-Username"

  change_sh="Change-Shell"

  change_su="Change-Privilege"

  del_user="Remove-User"

  install="Install"

  mountpoint="Mount point"

  custom="Custom"

  write="Write-Changes"

  none="None"

  select="Select"

  drivers="Drivers"

  os="Open Source"

  custom_msg="Enter a new custom mount point: \n\n $a Will be mounted under Root '/'"

  custom_err_msg0="\n$error New mount point can't contain special characters..."

  custom_err_msg1="\n$error New mount point can't be root mount point '/'"

  write_confirm="Write changes to disk?"

  intro_msg="Welcome to Golden Drake Linux, an Arch Installer focused on gaming and game development!\n\n $a Would you like to begin the install process?"

  wifi_msg0="Wi-Fi interface detected, would you like to connect?"

  wifi_msg1="Unable to connect to Wi-Fi network, exiting installer."

  connect_err0="$error No network connection exiting installer."

  connect_err1=$(echo -e "\n ${Red}$error ${Yellow}You must be connected to the internet to install Arch Linux.\n Please check your connection and try again.\n\n Show connection info: \n\n    ${Green}ip add \n    ip link \n    wifi-menu ${ColorOff}\n\n")

  locale_msg="Please select your desired locale:"

  zone_msg0="Please enter your time zone:"

  zone_msg1="Please enter your sub-zone:"

  keys_msg="Select your keymap:\n\n $a If unsure leave default"

  drive_msg="Auto-partition Drive:\n $a Select a drive to install Arch Linux onto \n $a NOTE: Selected drive will be formatted"

  part_msg="Select your desired method of partitioning:\n\n $a NOTE Auto-partitioning will format the selected drive \n $a Press cancel to return to drive selection"

  menu_msg="Return to Menu"

  fs_msg="Select your desired filesystem type: \n\n $a Default is EXT4"

  swap_msg0="Would you like to create SWAP space? \n\n $a (Recommend 512M - 1024M space on drive)"

  swap_msg1="Specify your desired swap size: \n\n $a (Align to 'M' for MiB or 'G' for GiB):"

  swap_err_msg0="$error not enough space on drive!"

  swap_err_msg1="$error swap must end in 'M' for MiB or 'G' for GiB"

  swap_err_msg2="\n$error failed turning on swap, try formatting first \n\n $a Returning to partition menu..."

  efi_msg0="Would you like to enable UEFI bios? \n\n $a May not work on some systems \n $a Enable with caution"

  gpt_msg="Would you like to use GPT partitioning? \n\n $a (GUID Partition Table)"

  install_type_msg="Select the type of system you would like to install: \n\n $a If unsure use 'Base' or 'Base-devel'"

  passwd_msg0="$error you must enter a password here."

  passwd_msg1="Passwords do not match, please try again..."

  part_err_msg="An error was detected during partitioning \n\n $a Returning to partition menu..."

  part_err_msg1="Drive operations error. (mount/umount failure) \n\n Returning to menu..."

  part_err_msg2="\n$error failed mounting device \n\n Returning to partition menu..."

  manual_part_msg="Guided Manual Partitioning: \n $a Select a drive to edit partition scheme \n $a Select a partition to edit the mount point \n $a Select 'Done' when finished"

  root_err_msg="$error partition too small to be root partition. \n\n $a Root partition must be at least 4 GiB in size"

  root_err_msg1="$error you must select a root partition before continuing with install."

  write_confirm_msg="Confirm writing changes to disk:"

  return_msg="\nYou have opened a new command line session.\n This enables you to run any custom commands from the installer.\n\n The GDL installer is still running in the background\n Return to the install where you left off with the command: \n    gdl\n    exit\n"

  arch_chroot_msg="\nYou have opened a new gdl-chroot session.\n This enables you to run commands on your newly installed system.\n\n Note: This is not a standard terminal emulator.\n Commands here are fed into installed system and the results displayed\n Up/down arrow history and most standard commands work \n To show this message again type: help \n You may install or search packages with the commands:\n\n    pacman -S <install package(s) here>\n    pacman -Ss <search-package-here>\n\n You may edit text files with nano or vim editors: \n\n    nano /path/to/file\n    vim /path/to/file\n\n The GDL installer is still running in the background.\n Return to the installer with the command:\n\n    gdl\n    exit\n"

  mirror_msg0="Update mirrorlist:"

  mirror_msg1="Please select your country code:"

  mirror_editor_msg="Select a text editor to edit mirrors:"

  manual_mirrors="Edit Mirrorlist Manually"

  update_mirrors_msg="Download & Rank New Mirrors"

  cancel_mirrors="Skip Updating Mirrors"

  mirror_cancel_msg="Are you sure you want to skip updating mirrors? \n\n $a This may have an effect on download speed"

  wifi_option_msg="Install wireless utilities? Provides Wi-Fi support. \n\n $a Necessary for connecting to Wi-Fi \n $a Select yes if using Wi-Fi"

  wifi_util_msg="Select your desired network utility: \n\n $a Default is netctl (select networkmanager for GUI)"

  net_util_msg0="Netctl network utility (wifi-menu)"

  net_util_msg1="NetworkManager Utility (nmcli)"

  pppoe_msg="Include support for PPPoE DSL connections? \n\n $a Select yes if using PPPoE \n $a If unsure select No"

  base_msg0="Vanilla kernel"

  base_msg1="Vanilla kernel with base-devel"

  hardened_msg0="Hardened kernel"

  hardened_msg1="Hardened kernel with base-devel"

  LTS_msg0="Long term support kernel"

  LTS_msg1="Long term support kernel with base-devel"

  zen_msg0="Zen kernel"

  zen_msg1="Zen kernel with base-devel"

  os_prober_msg="Install os-prober? \n\n $a Required for multiboot \n $a If dual booting select yes"

  grub_warn_msg0="Warning! System will not be bootable! \n\n $a You will need to configure a boot loader yourself \n $a Continue without a boot loader?"

  grub_warn_msg1="After install is complete choose not to reboot, you may choose to keep the system mounted at /mnt allowing you to arch-chroot into it and configure your own boot loader."

  syslinux_warn_msg="Installing syslinux in BIOS mode requires 64bit volume support to be disabled for boot partition.\n\n $a Note: This will format your boot partition\n Continue disabling 64bit volume on boot partition?"

  exit_msg="Ready to install system \n\n $a Are you sure you want to exit to menu?"

  install_err_msg0="$error root filesystem already installed \n\n $a Continuing to menu."

  install_err_msg1="$error no filesystem mounted \n\n $a Return to drive partitioning?"

  multilib_msg="64-bit architecture detected.\n\n $a Add multilib repos to pacman.conf? \n   (Allows installing 32-bit software on 64-bit system)"

  dhcp_msg="Enable DHCP at boot? (Recommended)\n\n $a Dynamic Host Control Protocol \n   (Automatic IP address configuration)"

  host_msg="Set your system hostname:\n\n $a Computer/host name \n $a No spaces or special characters"

  host_err_msg="$error hostname must begin with letter and can't contain special characters. \n\n $a Please try again."

  user_exists_msg="Would you like to add a new user account? \n\n $a Select 'yes' to add a new user."

  user_menu_msg="Add or edit user accounts:\n\n            Username:   |   Shell:"

  user_msg0="Create a new user account? \n\n $a (Recommended) Create a user now."

  user_msg1="Set username: \n\n $a Lowercase letters and numbers only \n $a No capital letters or special characters"

  user_msg2="Set full username: \n\n $a Write your full name"

  user_err_msg="$error username must begin with letter and cannot contain special characters or uppercase letters. \n\n $a Please try again..."

  user_err_msg1="$error username already in use. \n\n $a Please try again"

  user_err_msg2="$error you must enter a username \n\n $a Please try again"

  fulluser_err_msg="$error There are forbidden characters (,)\n\n $a Please try again"

  fulluser_err_msg1="$error This Fullname already in use.\n\n $a Please try again"

  graphics_msg="Select your desired graphics driver:\nDetected chipset: $chipset  \n\n $a If unsure use xf86-video-vesa or default"

  desktop_cancel_msg="Are you sure you don't want a desktop? \n\n $a You will be booted into command line only."

  nvidia_msg="Select your desired Nvidia driver: \n\n $a Cancel if none"

  touchpad_msg="Would you like to install xf86-input touchpad drivers?  \n\n $a Required for laptop touchpad support."

  desktop_msg="Would you like to install a desktop or window manager? \n\n $a Select 'yes' to install a desktop environment"

  dm_msg="Would you like to install a display manager? \n\n $a Graphical login manager"

  dm_msg1="Select your desired display manager:\n\n $a Default is lightdm"

  environment_msg="Select your desired environment:\n $a Use spacebar to check/uncheck \n $a Press enter when finished"

  startx_msg="Xinitrc file created. \n\n $a After login use the command 'startx' to access your desktop."

  extra_msg0="Install xfce4 goodies? \n\n $a XFCE4 Extra programs"

  extra_msg1="Install gnome extra? \n\n $a Gnome Extra programs"

  extra_msg2="Install mate extra? \n\n $a Mate Extra programs"

  extra_msg3="\n $a Install minimal plasma desktop?"

  extra_msg4="Install deepin extra? \n\n $a Deepin Extra programs"

  extra_msg5="Install xmonad-contrib? \n\n $a xmonad Extra programs"

  extra_msg6="Install gnome group? \n\n $a Gnome group programs"

  extra_msg7="Install windowmaker extra? \n\n $a WindowMaker Extra programs"

  extra_msg8="Install desktop extras software? \n\n $a Adds additional desktop software (recommended)"

  software_msg0="Would you like to install some common software? \n\n $a Select yes for a list of additional software"

  software_msg1="Choose your desired software: \n $a Use spacebar to check/uncheck software \n $a Press enter when finished"

  software_type_msg="Select your desired software type \n\n $a Press 'install' when finished selecting software"

  software_warn_msg="Are you sure you want to continue without any extra software? \n\n $a Press yes to continue without software."

  software_noconfirm_msg="Are you sure you don't want any software from:"

  complete_no_boot_msg="Install process complete! \n\n $a You did not configure a boot loader \n $a Return to the command line to configure?"

  not_complete_msg="Installation is NOT complete. Are you sure you want to reboot?"

  complete_msg="Install completed successfully. \n\n $a What would you like to do now?"

  part_frmt_msg="Would you like to format the selected partition? \n\n $a Select 'yes' to format partition. \n $a Select 'no' to mount without formating."

  swap_frmt_msg="Would you like to format the swap space? \n\n $a Select yes to format new swap space. \n $a No to enable without formatting."

  vbox_msg="VirtualBox guest install detected \n\n $a Installer will provide virtualbox-guest-utils."

  vmware_msg="Vmware guest install detected \n\n $a Installer will provide xf86-video-vmware xf86-input-vmmouse open-vm-tools."

  hyperv_msg="Hyper-v guest install detected \n\n $a Installer will provide xf86-video-fbdev."

  vm_msg="Virtual machine guest install detected \n\n $a Installer will provide default drivers."

  bluetooth_msg="Bluetooth support detected. \n\n $a Would you like to install bluez and bluez-utils? \n $a Required for bluetooth."

  blueman_msg="Would you like to install blueman bluetooth manager? \n\n $a Select 'yes' to install graphical bluetooth manager."

  btenable_msg="Enabling bluetooth..."

  nwmanager_msg0="Enabling NetworkManager..."

  nwmanager_msg1="Enabling netctl..."

  vbox_enable_msg="Enabling virtual system services..."

  efi_man_msg="EFI partition detected. \n\n $a Would you like to enable EFI boot?"

  efi_err_msg="$error A mount point has already been created at '/boot' \n\n Please unmount and mount EFI partition as boot."

  efi_err_msg1="$error Multiple EFI partitions found but not mounted. \n\n Please mount EFI partition at '/boot' and try again."

  vfat_msg="EFI system partition detected. \n\n $a Vfat required to create bootable EFI partition."

  loader_type_msg="Select your desired bootloader: \n\n $a Default is grub"

  loader_msg="GRand Unified Bootloader"

  loader_msg1="SysLinux Bootloader"

  loader_msg2="Systemd Bootloader"

  loader_msg3="EFISTUB Bootloader"

  loader_msg4="rEFInd Bootloader"

  failed_msg="$error Failed to install packages to new root. \n\n $a Share this link with the developers when reporting the issue:"

  shell_msg="Select your desired command shell \n\n $a Default is bash"

  nvidia_modeset_msg="Would you like to enable Nvidia DRM kernel mode setting? \n\n $a Direct Rendering Manager Kernel Module."

  nvidia_340msg="Your chipset is supported by nvidia-340xx legacy drivers. \n\n $a Continue installing nvidia-340xx? graphics drivers"

  nvidia_390msg="Your chipset is supported by nvidia-390xx legacy drivers. \n\n $a Continue installing nvidia-390xx? graphics drivers"

  nvidia_curmsg="Your chipset is supported by the latest nvidia drivers. \n\n $a Continue installing nvidia graphics drivers?"

  ucode_msg="Would you like to install intel-ucode? \n\n $a CPU microcode updates."

  ucode_failed_msg="Intel ucode failed to install for unknown reason. Please check (after install): /root/gdl.log"

  shrc_msg="Select your desired zsh configuration:"

  shrc_msg1="Default GDL RC"

  shrc_msg3="Clean ZSH install no RC"

  shrc_msg4="grml-zsh-config"

  nano_msg="User Friendly Text Editor"

  vim_msg="Advanced Text Editor"

  ssh_msg="Enable SSH server at boot? \n\n $a Enables secure shell server"

  ftp_msg="Enable FTP server at boot? \n\n $a Enables file transfer server"

  apache_msg="Enable Apache server at boot? \n\n $a Enables http server"

  nginx_msg="Enable Nginx server at boot? \n\n $a Enables http server"

  cups_msg="Enable cups at boot? \n\n $a Enables printing system"

  part_util="Graphical partition editor"

  part_util0="Semi-graphical partition editor"

  part_util1="Text mode partition editor"

  part_util2="GPT partition editor"

}

load_msg() {

  wait_load="\n Please wait..."

  connection_load="Please wait while we test your connection..."

  boot_load="Creating boot partition..."

  swap_load="Creating swap space..."

  frmt_load="Formatting..."

  mnt_load="Mounting..."

  pv_load="Creating physical volumes"

  lv_load="Creating logical volumes"

  encrypt_load="Encrypting drive..."

  mirror_load0="Retrieving new mirror list..."

  mirror_load1="Please wait while ranking mirrors..."

  efi_load1="Configuring efi boot..."

  grub_load1="Installing grub to drive..."

  grub_load2="Configuring grub..."

  syslinux_load="Installing syslinux to drive..."

  uefi_config_load="Please wait while configuring kernel for uEFI..."

  f2fs_config_load="Please wait while configuring kernel for F2FS..."

  kernel_config_load="Please wait while configuring kernel..."

  encrypt_load1="Please wait while configuring kernel for encryption..."

  dhcp_load="Enabling DHCP..."

  ssh_load="Enabling SSH..."

  cups_load="Enabling print system..."

  ftp_load="Enabling FTP..."

  http_load="Enabling HTTP..."

  dm_load="Enabling lightdm..."

  pacman_load="Please wait while we update your pacman databases..."

}

part_msg() {

  method0="Auto-partition Drive"

  method1="Auto-partition with Encrypted LVM"

  method2="Manually Partition Drive"

}

fs_msg() {

  fs0="4th extended file system"

  fs1="3rd extended file system"

  fs2="2nd extended file system"

  fs3="B-Tree File System"

  fs4="Journaled File System"

  fs5="Reiser File System"

  fs6="F2FS File System"

  fs7="VFAT/FAT32 File System"

  fs8="XFS"

}

graphics_msg() {

  gr1="Vesa ${os} $drivers"
  gr2="NVIDIA $drivers"
  gr4="AMD/ATI ${os} $drivers"
  gr5="Intel ${os} $drivers"
  gr6="NVIDIA $drivers"
  gr7="NVIDIA 340xx $drivers"
  gr8="NVIDIA ${os} $drivers"
  gr9="NVIDIA 390xx $drivers"
  gr10="AMDGPU Video ${drivers}"

}

menu_msg() {

  menu="Menu Items: \n\n $a Start a 'Command Line Session' to run custom commands\n $a Return to installer with 'gdl'"

  menu0="Re-Set Locale"

  menu1="Re-Set Time Zone"

  menu2="Re-Set Keymap"

  menu3="Partition Drive"

  menu4="Update Mirror list"

  menu5="Install Base System"

  menu11="Reboot System"

  menu12="Exit Installer"

  menu13="Command Line Session"

  menu_err_msg3="Drive already mounted, ready to install system. \n\n $a Are you sure you want to return to partition menu?"

  menu_exit_msg="System not installed yet... \n\n $a Are you sure you want to exit?"

  steam_add_msg="Installing Steam requires multilib to be enabled. \n\n $a Enable multilib repos now?"

  audio="Audio"

  audio_msg="Audio Software =>"

  database="Database"

  database_msg="Database Software =>"

  graphic="Graphics"

  graphic_msg="Graphics Software =>"

  internet="Internet"

  internet_msg="Internet Software =>"

  multimedia="Multimedia"

  multimedia_msg="Multimedia Software =>"

  office="Office"

  office_msg="Office Software =>"

  programming="Programming"

  program_msg="Programming Software =>"

  terminal="Terminal"

  terminal_msg="Terminal Emulators =>"

  text_editor="Text Editors"

  text_editor_msg="Text Editing Software =>"

  util="Utilities"

  util_msg="Utilities Software =>"

  servers="Server"

  servers_msg="Server software =>"

  fonts="Fonts"

  fonts_msg="Linux Fonts =>"

  games="Games"

  games_msg="Linux Games =>"

  extra_de="Extra Desktop"

  extra_de_msg="Extra Desktop Environment =>"

  extra_wm="Extra WM"

  extra_wm_msg="Extra Windows Managers =>"

  reboot0="Reboot System"

  reboot1="Return to Command Prompt"

  reboot2="GDL-Chroot Into Installed System"

  reboot3="Add New User Account"

  reboot4="View Install Log"

  reboot5="Install Additional Software"

  reboot6="Power Off System"

  customized_de="Customized Desktop"

  customized_de_msg="Customized Desktop Environments =>"

  more_de="Clean Desktop Environments"

  more_de_msg="Default Desktop Environments =>"

  more_wm="More Window Managers"

  more_wm_msg="Default Window Managers =>"

}

op_msg() {

  welcome_op_msg=" -| GDL |- "

  connection_op_msg=" -| Check Connection |- "

  locale_op_msg=" -| Set Locale |- "

  zone_op_msg=" -| Set Time Zone |- "

  key_op_msg=" -| Set Keymap |- "

  part_op_msg=" -| Partition Drive |- "

  partload_op_msg=" -| Partitioning Drive |- "

  manual_op_msg=" -| Partition Menu |- "

  edit_op_msg=" -| Edit Partition |- "

  mirror_op_msg=" -| Update Mirrorlist |- "

  install_op_msg=" -| Install System |- "

  config_op_msg=" -| Configure System |- "

  host_op_msg=" -| Set Hostname |- "

  passwd_op_msg=" -| Set Password |- "

  user_op_msg=" -| Add User |- "

  user_op_msg1=" -| Edit User |- "

  de_op_msg=" -| Install Desktop |- "

  software_op_msg=" -| Install Software |- "

  complete_op_msg=" -| Install Complete |- "

  menu_op_msg=" -| Main Menu |- "

  install_opt_msg="Select your desired install option: \n\n $a Quick install select 'GDL-Desktop' or 'GDL-Server' \n $a Advanced install options select 'GDL-Advanced'"

  install_opt0="Manually select install options"

  install_opt1="Quick desktop install"

  install_opt2="Quick LTS desktop install"

  install_opt3="Quick server install"

  install_opt4="Quick LTS server install"

}

var_msg() {

  gtk3_var="Install $DE gtk3? \n\n $a (experimental version)"

  drive_var="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Would you like to continue?"

  drive_var1="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Swap space: $SWAPSPACE MiB \n $a Would you like to continue?"

  drive_var2="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Swap space $SWAPSPACE MiB \n $a Boot: UEFI \n $a Would you like to continue?"

  drive_var3="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Boot: UEFI \n $a Would you like to continue?"

  encrypt_var0="Warning this will encrypt /dev/$DRIVE! \n\n $a Continue?"

  encrypt_var1="\nPlease enter a new password for /dev/$DRIVE \n\n $a Note this password is used to unencrypt your drive at boot"

  encrypt_var2="\nNew /dev/$DRIVE password again. \n\n $a Encryption password again:"

  root_var="Create a new root mount point: \n $a Note: Root mount point must be created first. \n\n $a Partition: /dev/$part \n $a Size: $part_size \n\n Create new root mount point?"

  manual_part_var0="Partition already mounted. \n\n $a Mount point: $part_mount \n $a Partition: /dev/$part \n $a Size: $part_size\n\n Edit to create new mount point"

  manual_part_var1="Would you like to unmount partition: /dev/$part and remove $part_mount mount point? \n\n $a Note will unmount all partitions mounted under"

  manual_part_var2="Warning: partition: /dev/$part is set as your root filesystem, this will erase all mount point under it. \n\n $a Are you sure you want to continue?"

  manual_part_var3="Would you like to edit the partition scheme now? \n\n $a Drive: /dev/$part \n $a Size: $part_size \n\n Edit partition scheme? -Don't forget to 'write' changes"

  manual_new_part_var="Would you like to create a new mount point? \n\n $a Partition: /dev/$part \n $a Size: $part_size \n\n Edit to create new mount point"

  manual_swap_var="Would you like to remove SWAP filesystem from /dev/$part? \n\n $a Select 'yes' to remove SWAP filesystem."

  mount_warn_var="Warning: disk /dev/$part contains mounted partitions. \n\n $a Would you like to unmount and edit partition scheme?"

  mnt_var0="Select a new mount point for /dev/$part: \n\n $a Select 'custom' to create new mount point"

  fs_err_var="$error A separate '/boot' partition must be setup when using an $FS filesystem. \n\n $a Returning to partition menu..."

  install_var="Begin installing Arch Linux base system onto /dev/$DRIVE?\n\n $a Download size: $software_size \n $a Estimated install time: $down_min minutes.\n $a Estimated speed: $connection_speed $connection_rate \n $a Packages to add: \n\nbase${base_install}"

  user_edit_var="Edit user:\n $a Username: $user\n $a Login Shell: $user_sh\n $a Full Username : $full_user\n $a Sudo User: $sudo"

  user_shell_var="Select a new shell for $user:\n $a Set user login shell"

  user_var0="\nPlease enter a new login password for: $user \n\n $a Set $user password"

  user_var1="\nRe-enter login password for: $user \n\n $a $user password again"

  sudo_var="Enable sudo privilege for $user? \n\n $a Enables administrative privilege for $user."

  sudo_var1="Disable sudo privilege for $user? \n\n $a Disables administrative privilege for $user."

  deluser_var="Delete user: $user? \n\n $a Removes user account from system"

  root_confirm_var="Confirm creating mount point? \n\n $a Mount point: '/' Root File System \n $a Partition: /dev/$part \n $a Size: $part_size \n $a Filesystem: $FS \n\n Write changes to disk?"

  part_confirm_var="Confirm creating mount point? \n\n $a Mount point: $mnt \n $a Partition: /dev/$part \n $a Size: $part_size \n $a Filesystem: $FS \n\n Write changes to disk?"

  software_confirm_var0="Add the following packages to install list? \n\n $a Number of packages: $software_int \n $a Download size: $software_size \n $a Packages to add: \n\n$software_list"

  software_confirm_var1="Proceed with installing software? \n\n $a Number of packages: $software_int \n $a Total download size: $software_size \n $a Estimated install time: $down_min minutes \n $a Estimated speed: $connection_speed $connection_rate \n $a Packages to install: \n\n$download_list"

  efi_var="A mounted EFI system has been detected at $esp_part \n\n $a Would you like to enable EFI boot?"

  vfat_var="The EFI system mounted at $esp_part does not contain a valid vfat filesystem. \n\n $a Would you like to format and create new vfat system?"

  efi_mnt_var="The EFI partition detected at $esp_part has not been mounted. \n\n Mount EFI boot partition now?"

  f2_err_var="$error You must create a separate boot partition in order to use an $FS filesystem. \n\n $a Returning to partition menu..."

}

load_var_msg() {

  load_var0="Partitioning /dev/$DRIVE..."

  load_var1="Please wait while creating $FS filesystem..."

  install_load_var="$h\nInstalling Arch Linux to: /dev/$DRIVE \n\n $a Download size: $software_size"

  software_load_var="$h\nInstalling additional software \n\n $a Download size: $software_size"

  locale_load_var="Generating $LOCALE locale..."

  zone_load_var="Setting time zone $ZONE..."

}

de_msg() {

  de0="Xfce4 Light Desktop"
  de1="Mate Light Desktop"
  de2="LXDE Light Desktop"
  de3="LXQT Light Desktop"
  de4="Gnome Modern Desktop"
  de5="Cinnamon Desktop"
  de6="KDE Plasma Desktop"
  de7="Enlightenment Desktop"
  de8="Openbox Window Manager"
  de9="Awesome Window Manager"
  de10="i3 Tiling Window Manager"
  de11="Fluxbox Window Manager"
  #de12="Dynamic Window Manager"
  de13="bspwm Window Manager"
  de14="Deepin Desktop"
  de15="GDL XFCE4 Edition"
  de16="xmonad Window Manager"
  de17="Budgie Light Desktop"
  de18="GDL OpenBox Edition"
  de19="Gnome Classic Desktop"
  #de20="WindowMaker Window Manager"
  de21="Sway Window Manager"
  de22="GDL Gnome Edition"
  de23="GDL Cinnamon Edition"
  de24="GDL Budgie Edition"
  de25="Qtile Window Manager"

}

dm_msg() {

  dm0="GNOME Desktop Display Manager"
  dm1="Multi Desktop Display Manager"
  dm2="Lxdm Desktop Display Manager"
  dm3="Simple Desktop Display Manager"

}

soft_msg() {

  # Audio
  audio0="Audio editing program"
  audio1="Advanced audio player"
  audio2="CLI music player"
  audio3="JACK Audio Connection Kit"
  audio4="Music visualizer program"
  audio5="Linux MultiMedia Studio"
  audio6="Music Player Daemon"
  audio7="GUI client for MPD"
  audio8="PulseAudio Volume Control"
  audio9="Console frontend for Pandora"
  audio10="Music player and library organizer"
  audio11="Equalizer for pulseaudio"
  audio13="Qt5 based audio-player"
  audio14="Music playback application"

  # Database
  db0="A document-oriented database"
  #db1="High-performance, open source database"
  db2="SQL server implimentation"
  db3="Sqlite module for PHP"
  db4="Advanced key-value store"
  db5="Powerful and scalable NoSQL database"
  db6="SQL database engine written in C"
  sys30="Fast SQL database server"
  sys31="Sophisticated object-relational DBMS"
  sys32="Web-based tool to administrate MySQL"

  # Internet
  net0="Chromium Web Browser"
  net1="FTP, FTPS and SFTP client"
  net2="Firefox Web Browser"
  net3="Console Web Browser"
  net4="Watch YouTube videos"
  net5="A fast and secure web browser"
  net6="Email and news client"
  net7="Console torrent client"
  net8="Graphical torrent client"
  net9="Highly-configurable IRC client"
  net10="GTK-based IRC client"
  net11="GTK-based IRC client"
  net12="Lightweight web browser"

  # Fonts
  # font0="Unicode fonts"
  font1="Fonts which support CN, JP, KR"

  # Games
  game0="Free FPS focused mainly on online multiplayer"
  game1="Port of classic BSD command line games"
  game2="Multiperson, first-person tank shooter"
  game3="Open-source flight simulator"
  game4="Classic UNIX-based chess game"
  game5="Similar to  SuperMario games"
  game6="Kart racing game featuring Tux"
  game7="Modern multiplayer FPS"
  game8="Fast paced multiplayer FPS"
  game9="Free, open-source first person shooter"
  game10="Valve's digital software delivery system"
  game11="AisleRiot Solitaire collection"

  # Graphic
  graphic0="3D graphics creation suite"
  graphic1="Photography development application"
  graphic2="GNU Image Manipulation"
  graphic3="Set of tools for drawing graphs"
  graphic4="Command-line image manipulation program"
  graphic6="Lightweight image viewer"
  graphic7="A powerful raw image processing program"
  graphic8="Image processing system"
  graphic9="Professional vector graphics editor"
  graphic10="Paint icons and pixel based artwork"
  graphic11="Painting application for digital painters"

  # Multimedia
  media0="Multithreaded video transcoder"
  media1="Media Player"
  media2="Video editing software"
  media3="Screen capture software"
  media4="A free front-end for MPlayer"
  media5="GNOME media player"
  media6="VLC graphical media player"
  media7="Media player-MPlayer based"
  media8="Multimedia codecs"
  media9="Full featured video editor for Linux"
  media10="Screencast GIF tool"
  media11="Powerful and simple media player"
  media12="Download videos and audio from YouTube"

  # Office
  office0="Free word processing"
  office1="Graphic Art And Office Suite"
  office2="Powerful spreadsheet application"
  office3="Powerful spreadsheet application"
  office4="Office word processor latest"
  office5="Office word processor maintenance"
  office6="Lightweight PDF and XPS viewer"
  office7="Minimalistic document viewer"
  office8="A collaborative office text editor"
  office9="Office document viewer for GNOME"
  office10="Create labels and business cards"
  office11="Desktop publishing software"

  # Programming
  prg0="Common Lisp interpreter, compiler and debugger"
  prg1="The D programming language and compiler"
  prg2="The dart programming language SDK"
  prg3="The Go programming language"
  prg4="Developer tools for Go language"
  prg5="Java Runtime Environments"
  prg7="OpenJDK Java 8 development kit"
  prg8="OpenJFX 8 client application platform"
  prg9="A feature-rich programming language"
  prg10="A general-purpose scripting language"
  prg11="High-level scripting language"
  prg12="An object-oriented language"
  prg13="Object-oriented and functional based"
  prg14="OpenJDK Java 11 development kit"
  prg15="OpenJDK Java 12 development kit"

  # Terminal
  term0="Framebuffer Terminal Emulator"
  term1="GNOME Dropdown Terminal"
  term2="Simple terminal emulator"
  term3="Light Weight Terminal"
  term4="urxvt Terminal Emulator"
  term5="Terminator Terminal Emulator"
  term6="XFCE4 Terminal Emulator"
  term7="Drop-down terminal (Quake style)"
  term8="A simple terminal emulator for X"
  term9="A simple VTE-based terminal"
  term10="EFL based terminal emulator"
  term11="Quake and Doom inspired terminal"
  term12="Terminal which mimics a cathode display"
  term13="A tiling terminal emulator for Linux using GTK+ 3"

  # Text editor
  edit0="OS in a text editor"
  edit1="A text editor using GTK2"
  edit2="GNOME text editor"
  edit3="Graphical interface for Vim"
  edit4="XFCE4 text editor"
  edit5="Popular fork of VIM editor"
  edit6="Console text editor fork of vi"
  edit7="Atom feature-rich text editor"
  edit8="A WYSIWYG text editor"

  # Shell
  shell0="DASH command shell (Debian Almquist shell)"
  shell1="Fish command shell (friendly interactive shell)"
  shell2="Korn command shell (mksh enhanced ksh)"
  shell3="tcsh/C command shell (the C shell)"
  shell4="Z-Shell command shell (powerful and feature-rich)"
  shell5="Bourne again shell (default Linux shell)"

  # Server
  srv1="Linux Apache MariaDB PHP server stack"
  srv2="Linux Nginx MariaDB PHP server stack"
  srv3="Nginx HTTP/Proxy Server (Stable Branch)"
  srv4="Nginx HTTP/Proxy Server (Latest Branch)"
  srv5="Light Flexible HTTP Server"
  srv6="Secure fast mail server"
  srv7="Very Secure FTP daemon"
  srv8="Full-featured Web proxy cache server"
  srv9="SMB Fileserver and AD Domain server"
  srv10="The ISC DNS Server"
  srv11="The CUPS Printing System"
  sys1="Apache High Proformance HTTP Server"
  sys10="Secure Shell Deamon"
  srv12="RFC2131 compliant DHCP client daemon"

  # System
  sys2="Light system monitor for X"
  sys3="Source control management"
  sys4="Partition and disk management"
  sys5="A mouse server for the console"
  sys6="CLI process Info"
  sys8="CD/DVD writing suite"
  sys9="CLI network analyzer"
  sys11="GNU screen"
  sys12="Display system info"
  sys13="Simple command-line screenshot"
  sys14="Terminal multiplexer"
  sys15="Twin-panel file manager"
  sys16="Desktop virtualization"
  sys17="Uncomplicated firewall"
  sys18="Wget CLI downloader"
  sys19="Lightweight dynamic menu for X"
  sys20="Console-based file manager"
  sys21="Lightweight file manager for X"
  sys22="Deletes unneeded files"
  #sys23="Graphical file manager for X"
  sys24="Graphical calculator application"
  sys25="Basic CLI calculator"
  sys26="GNOME graphical package manager"
  sys27="GNOME software tools"
  sys28="NTFS drivers and utilities"
  sys34="Screensaver for xorg"
}

######################################################
### END TRANSLATION - DO NOT EDIT BELOW THIS LINE! ###
######################################################

a="\Z3*\Zn"
h="\Z3<\Z1#\Z3>\Zn"

if "$reload"; then
  var_msg
  load_var_msg
  translate_this_var
else
  dialog_msg
  main_msg
  load_msg
  part_msg
  fs_msg
  graphics_msg
  de_msg
  dm_msg
  menu_msg
  soft_msg
  op_msg
  translate_this
fi
