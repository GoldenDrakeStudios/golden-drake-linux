# GDL maintainer: David C. Drake <https://davidcdrake.com>
# Anarchy maintainers: Deadhead (Dylan Schacht) and Erazem Kokot

LANG="en_US.UTF-8"

dialog_text() {
  title="Golden Drake Linux - Arch Installer"
  backtitle="Golden Drake Linux"
}

main_text() {
  start_menu_msg="GDL is an installer for the Arch Linux distribution. Because you are installing Arch, you should read the Arch Wiki (\Z6wiki.archlinux.org\Zn) before reporting any post-installation issues. If an error occurs during installation, use the command \Z2nc termbin.com 9999 < /root/gdl.log\Zn in the terminal and share the returned URL along with a description of the issue on our GitHub."
  start_menu_links="Website: https://goldendrakestudios.com/golden-drake-linux/\n\nGitHub: https://github.com/GoldenDrakeStudios/golden-drake-linux/"
  force_quit_msg="Forcefully exiting installer (Ctrl+C). Your system is in an unknown state and the installation may not have finished yet, so your installed system might not work. Check \Z2gdl.log\Zn for more info."
  error="\Z1Error:\Zn"
  yes="Yes"
  no="No"
  ok="OK"
  cancel="Cancel"
  other="Other"
  default="Default"
  edit="Edit"
  back="Back"
  done_msg="Done"
  partition="Partition"
  size="Size"
  add="Add"
  new_user="New User"
  change_pass="Change Password"
  change_fn="Change Full Name"
  change_su="Change Privilege"
  del_user="Remove User"
  install="Install"
  mountpoint="Mount Point"
  custom="Custom"
  write="Write Changes"
  none="None"
  select="Select"
  drivers="Drivers"
  open_source="Open Source"
  custom_msg="Enter a new custom mount point:\n\n ${a} Will be mounted under root '/'"
  custom_err_msg0="\n${error} New mount point can't contain special characters..."
  custom_err_msg1="\n${error} New mount point can't be root '/'"
  write_confirm="Write changes to disk?"
  intro_msg="Welcome to Golden Drake Linux (GDL): Arch for gamers and game developers!"
  locale_msg="Please select your desired locale:"
  zone_msg0="Please enter your time zone:"
  zone_msg1="Please enter your sub-zone:"
  keys_msg="Select your keymap:\n\n ${a} If unsure, use the default"
  drive_msg="Auto-partition Drive:\n\n ${a} Select a drive to install Arch Linux onto\n ${a} NOTE: Selected drive will be formatted"
  part_msg="Select your desired method of partitioning:\n\n ${a} NOTE: Auto-partitioning will format the selected drive\n ${a} WARNING: Formatting will erase all data on the drive"
  menu_msg="Return to Menu"
  fs_msg="Select your desired filesystem type:"
  swap_msg0="Would you like to create SWAP space?\n\n ${a} (Recommend 512M - 1024M space on drive)"
  swap_msg1="Specify your desired swap size:\n\n ${a} (Align to 'M' for MiB or 'G' for GiB):"
  swap_err_msg0="${error} not enough space on drive!"
  swap_err_msg1="${error} swap must end in 'M' for MiB or 'G' for GiB"
  swap_err_msg2="\n${error} failed turning on swap. Try formatting first.\n\n ${a} Returning to partition menu..."
  efi_msg0="Would you like to enable UEFI bios?\n\n ${a} May not work on some systems\n ${a} Enable with caution"
  gpt_msg="Would you like to use GPT partitioning?\n\n ${a} (GUID Partition Table)"
  passwd_msg0="${error} you must enter a password here."
  passwd_msg1="Passwords do not match, please try again."
  part_err_msg="Error detected during partitioning.\n\n ${a} Returning to partition menu..."
  part_err_msg1="Drive operations error (mount/umount failure).\n\n Returning to menu..."
  part_err_msg2="\n${error} failed mounting device.\n\n Returning to partition menu..."
  manual_part_msg="Guided Manual Partitioning:\n ${a} Select a drive to edit partition scheme\n ${a} Select a partition to edit mount point\n ${a} Select '${done_msg}' when finished"
  root_err_msg="${error} partition too small to be root partition.\n\n ${a} Root partition must be at least 4 GiB in size"
  root_err_msg1="${error} you must select a root partition before continuing with install."
  write_confirm_msg="Confirm writing changes to disk:"
  mirror_msg0="Update mirror list:"
  mirror_msg1="Please select your country code:"
  mirror_editor_msg="Select a text editor to edit mirrors:"
  manual_mirrors="Edit Mirror List Manually"
  update_mirrors_msg="Download & Rank New Mirrors"
  cancel_mirrors="Skip Updating Mirrors"
  wifi_option_msg="Install wireless utilities? Provides Wi-Fi support.\n\n ${a} Necessary for connecting to Wi-Fi\n ${a} Select '${yes}' if you plan to use Wi-Fi"
  os_prober_msg="Install os-prober?\n\n ${a} Required for multiboot\n ${a} If dual booting select '${yes}'"
  exit_msg="Ready to install system.\n\n ${a} Are you sure you want to exit to menu?"
  install_err_msg="${error} no filesystem mounted.\n\n ${a} Return to drive partitioning?"
  host_msg="Set your system hostname:\n\n ${a} Computer/host name\n ${a} No spaces or special characters"
  host_err_msg="${error} hostname must begin with a letter and can't contain special characters.\n\n ${a} Please try again"
  user_exists_msg="Would you like to add a new user account?\n\n ${a} Select '${yes}' to add a new user."
  user_menu_msg="Add or edit user accounts:"
  user_msg0="Create a new user account?\n\n ${a} (Recommended) Create a user now."
  user_msg1="Set username:\n\n ${a} Lowercase letters and numbers only\n ${a} No capital letters or special characters"
  user_msg2="Set user's full name:\n\n ${a} Write your full name"
  user_err_msg="${error} Username must begin with a letter and cannot contain special characters or uppercase letters.\n\n ${a} Please try again"
  user_err_msg1="${error} Username already in use.\n\n ${a} Please try again"
  user_err_msg2="${error} You must enter a username.\n\n ${a} Please try again"
  full_name_err_msg="${error} There are forbidden characters (,).\n\n ${a} Please try again"
  full_name_err_msg1="${error} This full name is already in use.\n\n ${a} Please try again"
  graphics_msg="Select your desired graphics driver:\nDetected chipset: ${chipset}\n\n ${a} If unsure, use default or xf86-video-vesa"
  touchpad_msg="Would you like to install the xf86-input-libinput touchpad driver?\n\n ${a} Required for touchpad support."
  software_msg="Choose your desired software:\n\n ${a} Use spacebar to check/uncheck software\n ${a} Press enter when finished"
  part_frmt_msg="Would you like to format the selected partition?\n\n ${a} Select '${yes}' to format partition.\n ${a} Select '${no}' to mount without formating."
  swap_frmt_msg="Would you like to format the swap space?\n\n ${a} Select '${yes}' to format new swap space.\n ${a} Select '${no}' to enable without formatting."
  efi_man_msg="EFI partition detected.\n\n ${a} Would you like to enable EFI boot?"
  efi_err_msg="${error} A mount point has already been created at '/boot'\n\n Please unmount and mount EFI partition as boot."
  efi_err_msg1="${error} Multiple EFI partitions found but not mounted.\n\n Please mount EFI partition at '/boot' and try again."
  vfat_msg="EFI system partition detected.\n\n ${a} VFAT required to create bootable EFI partition."
  failed_msg="${error} Failed to install packages to new root.\n\n ${a} Share this link with the developers when reporting the issue:"
  nano_msg="User-friendly Text Editor"
  vim_msg="Advanced Text Editor"
  part_util="Graphical partition editor"
  part_util0="Semi-graphical partition editor"
  part_util1="Text mode partition editor"
  part_util2="GPT partition editor"
  shell_prompt_msg1="Welcome back to the command prompt, human!"
  shell_prompt_msg2="Launch installer: ${Green}gdl${NC} or ${Green}installer${NC}\tRead the Arch Wiki: ${Cyan}wiki-search [query]${NC}\nReboot computer:  ${Magenta}reboot${NC}\t\tShut down computer: ${Magenta}poweroff${NC}\n"
  install_incomplete_msg="Installation is NOT complete. Are you sure you want to reboot?"
  install_complete_msg1="Installation complete! Beware, your new system's still mounted here: /mnt"
  install_complete_msg2="Run a command within new system (use with extreme caution): ${Green}arch-chroot /mnt [command]${NC}\nRead install log: ${Cyan}less gdl.log${NC}\t\tRead the Arch Wiki: ${Cyan}wiki-search [query]${NC}\nReboot computer:  ${Magenta}reboot${NC}\t\tShut down computer: ${Magenta}poweroff${NC}\n"
}

loading_text() {
  wait_load="Please wait..."
  boot_load="Creating boot partition..."
  swap_load="Creating swap space..."
  frmt_load="Formatting..."
  mnt_load="Mounting..."
  pv_load="Creating physical volumes..."
  lv_load="Creating logical volumes..."
  encrypt_load="Encrypting drive..."
  mirror_load0="Retrieving new mirror list..."
  mirror_load1="Please wait while ranking mirrors..."
  efi_load="Configuring EFI boot..."
  pacman_load="Please wait while we update your pacman databases..."
}

partitioning_text() {
  method0="Auto-partition Drive"
  method1="Auto-partition with Encrypted LVM"
  method2="Manually Partition Drive"
}

filesystem_text() {
  fs_ext4="4th extended filesystem"
  fs_btrfs="B-tree filesystem"
  fs_xfs="XFS filesystem"
  fs_fat="VFAT/FAT32 filesystem"
}

graphics_text() {
  graphics_default="Detect ${drivers} Automatically"
  graphics_vesa="Vesa ${open_source} ${drivers}"
  graphics_nvidia="NVIDIA Proprietary ${drivers}"
  graphics_ati="AMD/ATI ${open_source} ${drivers}"
  graphics_intel="Intel ${open_source} ${drivers}"
  graphics_nouveau="NVIDIA ${open_source} ${drivers}"
  graphics_amd="AMDGPU ${open_source} ${drivers}"
}

menu_text() {
  menu="Menu Items:\n\n ${a} Start a 'Command Line Session' to run custom commands\n ${a} Return to installer with 'gdl'"
  menu0="Re-Set Locale"
  menu1="Re-Set Time Zone"
  menu2="Re-Set Keymap"
  menu3="Partition Drive"
  menu4="Update Mirror List"
  menu5="Install Base System"
  menu11="Reboot System"
  menu12="Exit Installer"
  menu13="Command Line Session"
  menu_err_msg3="Drive already mounted, ready to install system.\n\n ${a} Are you sure you want to return to partition menu?"
  menu_exit_msg="System not installed yet.\n\n ${a} Are you sure you want to exit?"
  graphic_msg="Graphics Software"
  internet_msg="Internet Software"
  multimedia_msg="Audio & Multimedia Software"
  program_msg="Programming Software"
  util="Utilities"
  fonts="Fonts"
  games="Games"
  reboot0="Reboot System"
  reboot1="Return to Command Prompt"
  reboot2="Chroot into Installed System"
  reboot3="Add New User Account"
  reboot4="View Install Log"
  reboot5="Install Additional Software"
  reboot6="Power Off System"
}

operation_text() {
  welcome_op_msg="GDL"
  locale_op_msg="Set Locale"
  zone_op_msg="Set Time Zone"
  key_op_msg="Set Keymap"
  part_op_msg="Partition Drive"
  partload_op_msg="Partitioning Drive"
  manual_op_msg="Partition Menu"
  edit_op_msg="Edit Partition"
  mirror_op_msg="Update Mirror List"
  install_op_msg="Install System"
  config_op_msg="Configure System"
  host_op_msg="Set Hostname"
  passwd_op_msg="Set Password"
  user_op_msg="Add User"
  user_op_msg1="Edit User"
  software_op_msg="Install Software"
  complete_op_msg="Install Complete"
  menu_op_msg="Main Menu"
}

variable_text() {
  drive_var="WARNING: This will erase all data on the drive!\n\n ${a} Location: /dev/${DRIVE}\n ${a} Size: ${drive_gigs} GiB\n ${a} Filesystem: ${FS}\n\nWould you like to continue?"
  drive_var3="WARNING: This will erase all data on the drive!\n\n ${a} Location: /dev/${DRIVE}\n ${a} Size: ${drive_gigs} GiB\n ${a} Filesystem: ${FS}\n ${a} Boot: UEFI\n\nWould you like to continue?"
  encrypt_var0="WARNING: This will encrypt /dev/${DRIVE}\n\n ${a} Continue?"
  encrypt_var1="\nPlease enter a new password for /dev/${DRIVE}\n\n ${a} NOTE: This password is used to unencrypt the drive at boot"
  encrypt_var2="\nNew /dev/${DRIVE} password again.\n\n ${a} Encryption password again:"
  root_var="Create a new root mount point:\n ${a} NOTE: Root mount point must be created first.\n\n ${a} Partition: /dev/${part}\n ${a} Size: ${part_size}\n\n Create new root mount point?"
  manual_part_var0="Partition already mounted.\n\n ${a} Mount point: ${part_mount}\n ${a} Partition: /dev/${part}\n ${a} Size: ${part_size}\n\nEdit to create new mount point."
  manual_part_var1="Would you like to unmount partition /dev/${part} and remove the ${part_mount} mount point?\n\n ${a} NOTE: This will unmount any downstream partitions"
  manual_part_var2="WARNING: Partition /dev/${part} is set as your root filesystem and continuing will erase all mount points under it.\n\n ${a} Are you sure you want to continue?"
  manual_part_var3="Would you like to edit the partition scheme now?\n\n ${a} Drive: /dev/${part}\n ${a} Size: ${part_size}\n\n Edit partition scheme? (Don't forget to 'write' changes!)"
  manual_new_part_var="Would you like to create a new mount point?\n\n ${a} Partition: /dev/${part}\n ${a} Size: ${part_size}\n\nEdit to create new mount point."
  mount_warn_var="WARNING: Disk /dev/${part} contains mounted partition(s).\n\n ${a} Unmount the partition(s) and edit the partition scheme?"
  mnt_var0="Select a new mount point for /dev/${part}:\n\n ${a} Select 'custom' to create new mount point"
  fs_err_var="${error} A separate '/boot' partition must be setup when using an ${FS} filesystem.\n\n ${a} Returning to partition menu..."
  user_var0="\nPlease enter a new login password for: \Z6${NEW_USERNAME}\Zn\n\n ${a} NOTE: \Z5root\Zn will use the same password"
  user_var1="\nConfirm login password for: \Z6${NEW_USERNAME}\Zn\n\n ${a} Re-enter password"
  root_confirm_var="Confirm creating mount point?\n\n ${a} Mount point: '/' (root)\n ${a} Partition: /dev/${part}\n ${a} Size: ${part_size}\n ${a} Filesystem: ${FS}\n\n Write changes to disk?"
  part_confirm_var="Confirm creating mount point?\n\n ${a} Mount point: ${mnt}\n ${a} Partition: /dev/${part}\n ${a} Size: ${part_size}\n ${a} Filesystem: ${FS}\n\n Write changes to disk?"
  vfat_var="The EFI system mounted at ${esp_part} does not contain a valid VFAT filesystem.\n\n ${a} Would you like to format and create a new VFAT system?"
  efi_mnt_var="The EFI partition detected at ${esp_part} has not been mounted.\n\n Mount EFI boot partition now?"
}

variable_loading_text() {
  load_var0="Partitioning /dev/${DRIVE}..."
  load_var1="Please wait while creating ${FS} filesystem..."
}

software_text() {
  # Misc. Games
  software_lutris="Lutris + Wine + Battle.net dependencies"
  software_steam="Valve's digital software delivery system"
  software_itch="Manage itch.io games"
  software_legendary="FOSS replacement for Epic Games Launcher"
  software_libretro="RetroArch + emulation cores"
  software_playonlinux="GUI for managing Windows programs"
  software_dosbox="Emulator for DOS games"
  software_scummvm="'VM' for point-and-click adventure games"

  # Action Games
  software_supertux="2D platformer starring Tux"
  software_frogatto="2D platformer starring a quixotic frog"
  software_alex4="2D platformer starring Alex the Allegator"
  software_asciiportal="Text-based puzzle game inspired by Portal"
  software_mari0="Mario game with Portal gun mechanics"
  software_xonotic="Single/multiplayer FPS (fork of Nexuiz)"
  software_warsow="Multiplayer FPS (Qfusion engine)"
  software_sauerbraten="Single/multiplayer FPS (Cube 2 engine)"
  software_assaultcube_reloaded="Single/multiplayer FPS (Cube engine)"
  software_openarena="Single/multiplayer FPS (ioquake3 engine)"
  software_astromenace="Hardcore 3D space shooter"
  software_chromium_bsu="Fast-paced, top-down space shooter"
  software_starfighter="Side-scrolling space shooter"
  software_teeworlds="Fast-paced multiplayer 2D shooter"
  software_bzflag="Multiplayer 3D tank battle game"

  # Adventure Games
  software_bass="Beneath a Steel Sky, point-and-click sci-fi thriller"
  software_fotaq="Flight of the Amazon Queen, point-and-click adventure"
  software_lure="Lure of the Temptress, fantasy point-and-click adventure"
  software_drascula="Drascula: The Vampire Strikes Back, comical adventure"
  software_zsdx="Mystery of Solarus DX, a fan-made Zelda game"
  software_sdlpop="Prince of Persia, SDL-based port"
  software_zork1="Zork I text adventure"
  software_zork2="Zork II text adventure"
  software_zork3="Zork III text adventure"
  software_open_adventure="Colossal Cave Adventure, the original text adventure!"

  # Roleplaying Games (RPGs)
  software_openmw="Open source engine for TES III: Morrowind"
  software_openmw_tes3mp="Multiplayer functionality for OpenMW"
  software_daggerfall_unity_aur_bin="TES II: Daggerfall, Unity rebuild"
  software_freedroidrpg="Sci-fi action-RPG starring Tux on future Earth"
  software_flare_game="Fantasy action-RPG using the FLARE engine"
  software_naev="2D space sim action-RPG"
  software_rogue="The original ASCII dungeon crawler!"
  software_angband="Tolkien-based ASCII roguelike"
  software_umoria="Earlier Tolkien-based ASCII roguelike"
  software_nethack="Another classic ASCII roguelike...with a pet!"
  software_tome4="Tales of Maj'Eyal, graphical fantasy roguelike"
  software_stone_soup="Graphical fantasy roguelike"
  software_cataclysm_dda_tiles="Graphical post-apocalyptic roguelike"
  software_doomrl="DOOM as a graphical roguelike"
  software_planeshift="3D fantasy MMORPG"
  software_runescape_launcher="RuneScape 3D fantasy MMORPG"
  software_runelite="'Old School RuneScape'"
  software_manaplus="2D MMORPGs: Mana World, Evol Online, etc."

  # Strategy Games
  software_0ad="0 A.D., a 3D historically-based RTS game"
  software_widelands="Fantasy RTS game with emphasis on economy and transport"
  software_megaglest="3D fantasy RTS game"
  software_warzone2100="3D sci-fi RTS game"
  software_boswars="Futuristic RTS game"
  software_curseofwar="Terminal-based RTS game (ncurses)"
  software_pingus="Level-based puzzle game (Lemmings clone)"
  software_hedgewars="Turn-based artillery game (Worms clone)"
  software_warmux="Turn-based artillery game"
  software_wesnoth="Fantasy turn-based strategy game"
  software_freeciv="Clone of the original Civilization game"
  software_singularity="Endgame: Singularity, an AI survival strategy game"

  # Racing Games
  software_supertuxkart="Kart racing game featuring Tux"
  software_extremetuxracer="Downhill racing game starring Tux"
  software_armagetronad="3D Tron-like lightcycle game"
  software_gltron="3D Tron-like lightcycle game"
  software_torcs="3D car-racing simulator using OpenGL"

  # Simulation/Construction/Management Games
  software_dwarffortress="Build a dwarven outpost or play as an adventurer"
  software_lincity_ng="City management sim"
  software_simutrans="Transportation management sim"
  software_flightgear="Flight simulator"
  software_minetest="Multiplayer infinite-world voxel sandbox"
  software_minecraft_launcher="Official Minecraft launcher"

  # Development/Programming Software
  software_godot="2D and 3D game engine"
  software_love="2D game engine"
  software_solarus="2D action-adventure/RPG engine"
  software_spring="3D RTS game engine"
  software_unityhub="Unity 3D game engine hub"
  software_unreal_engine="3D game engine by Epic Games"
  software_tiled="2D tile map editor"
  software_android_studio="Android IDE"
  software_allegro="Game programming library"
  software_python_pygame="Python library for 2D games"
  software_panda3d="3D game engine with Python bindings"
  software_pygtk="Python bindings for GTK"
  software_scratch="Create interactive stories, games, and art"
  software_atom="Feature-rich text editor developed by GitHub"
  software_code="Visual Studio Code (open source build)"
  software_geany="Fast and lightweight IDE"
  software_emacs="OS in a text editor"

  # Graphics/Drawing/Modeling Software
  software_gimp="GNU Image Manipulation Program"
  software_inkscape="Professional vector graphics editor"
  software_blender="3D graphics creation suite"
  software_goxel="Voxel editor"
  software_magicavoxel="Voxel editor and interactive path tracing renderer"
  software_libresprite="Create sprites and pixel art (fork of last GPL version of aseprite)"
  software_aseprite="Create sprites and pixel art (non-GPL version)"
  software_mtpaint="Create icons and pixel art"
  software_mypaint="Fast and easy painting application with brush dynamics"
  software_krita="Professional image editing and painting program"

  # Multimedia Software
  software_obs_studio="Free software for live streaming and recording"
  software_openshot="Award-winning free and open source video editor"
  software_kdenlive="Full-featured, non-linear video editor (MLT framework)"
  software_simplescreenrecorder="Screen capture software"
  software_youtube_dl="Download videos and audio from YouTube"
  software_vlc="VLC graphical media player"
  software_spotify="Proprietary music streaming service"
  software_audacity="Audio editing program"
  software_lmms="Linux MultiMedia Studio"
  software_pulseaudio_equalizer="Graphical equalizer for PulseAudio"

  # Internet Software
  software_firefox="Firefox web browser"
  software_chromium="Chromium web browser"
  software_google_chrome="Google Chrome web browser"
  software_opera="Opera web browser"
  software_brave_bin="Brave web browser"
  software_discord="All-in-one voice and text chat for gamers"
  software_slack_desktop="Slack Desktop for Linux"
  software_hexchat="GTK-based IRC client"
  software_transmission_gtk="Graphical torrent client"
  software_piavpn_bin="Private Internet Access VPN client"
  software_w3m="Text-based web browser with image support and other advanced features"
  software_lynx="Simple text-based browser, the oldest browser still being maintained!"
  software_minitube="Watch YouTube videos"
  software_filezilla="FTP, FTPS, and SFTP client"
  software_evolution="Manage your email, contacts, and schedule"
  software_thunderbird="Email and news client"

  # Fonts and Language Input
  software_bdf_unifont="Unicode fonts"
  software_noto_fonts_cjk="Fonts which support CN, JP, KR"
  software_ibus_libpinyin="Chinese pinyin input engine for IBus"
  software_ibus_anthy="Japanese input engine for IBus"
  software_ibus_hangul="Korean input engine for IBus"

  # Utilities
  software_htop="Interactive process viewer"
  software_gtop="Visually-appealing system monitor"
  software_bashtop="Visually-appealing resource monitor"
  software_mangohud="Vulkan overlay for FPS, CPU/GPU load, temp., etc."
  software_gparted="Partition and disk management"
  software_gnome_disk_utility="GNOME disk management utility"
  software_baobab="Graphical directory tree analyzer"
  software_innoextract="Tool to extract installer files"
  software_virtualbox="Desktop virtualization"
  software_vmware_workstation="VMware Workstation Player/Pro"
  software_insync="Unofficial Google Drive and OneDrive client"
  software_pcloud_drive="pCloud client, electron edition"
  software_timeshift="System restore utility"
  software_luckybackup="Backup and sync tool"
  software_authy="2FA desktop application"
  software_clamav="Anti-virus toolkit for Unix"
  software_ranger="Console-based file manager"
  software_bleachbit="Deletes unneeded files"
}

if "${RELOAD}"; then
  variable_text
  variable_loading_text
else
  dialog_text
  main_text
  loading_text
  partitioning_text
  filesystem_text
  graphics_text
  menu_text
  software_text
  operation_text
fi
