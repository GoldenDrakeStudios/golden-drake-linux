#!/bin/bash
#
# Golden Drake Linux (GDL): an Arch installer for gamers and game developers!
# Copyright (C) 2020-2021 Golden Drake Studios: goldendrakestudios.com
# Forked originally from the Anarchy installer: anarchyinstaller.gitlab.io

source libgdl.sh
source /etc/gdl.conf
source "${LANG_FILE}"

initialize() {
  if [ "$(id -u)" -ne 0 ]; then
    dragonsay "Sorry, human: gdl requires root privileges (e.g., sudo)."
    exit 1
  elif [ ! -f "${LOG_FILE}" ]; then
    # First (automatic) launch of the installer; create log file
    touch "${LOG_FILE}"
    # Customize the installer's pacman.conf
    sed -i 's/^#Color$/Color/' /etc/pacman.conf
    sed -i 's/^#CheckSpace$/CheckSpace/' /etc/pacman.conf
    sed -i '/^#VerbosePkgLists$/ a ILoveCandy' /etc/pacman.conf
    sed -i '/\[multilib]$/ {
      N
      /Include/s/#//g}' /etc/pacman.conf
    clear
    # Welcome the user, then exit to command prompt so they can run other
    # commands (if desired) before jumping into the installation process
    dragonsay "${intro_msg}"
    echo -e "${shell_prompt_msg2}"
    exit
  fi
  log "Initializing installer"
  trap force_quit SIGINT # Execute trap when Ctrl+C is pressed (SIGINT)
  systemctl start NetworkManager.service
  for library in /usr/lib/gdl/*; do
    source "${library}"
  done
  set_language
  op_title="${about_gdl_title}"
  dialog --ok-button "${ok}" \
    --msgbox "\n${about_gdl_msg}\n\n${about_gdl_links}" 16 80
}

final_system_check() {
  # Check if system is installed
  if "${INSTALLATION_COMPLETE}"; then
    clear
    dragonsay "${install_complete_msg1}" |& tee -a "${LOG_FILE}"
    cp "${LOG_FILE}" /mnt/root
    echo -e "${install_complete_msg2}"
    exit
  else
    # Warn user install incomplete, prompt for reboot
    op_title="${default_op_msg}"
    if (yesno "${install_incomplete_msg}" "${yes}" "${no}"); then
      clear
      umount -R /mnt
      reboot
      exit
    fi
  fi
}

main() {
  initialize
  set_keyboard_layout
  update_mirrors
  set_locale
  set_zone
  prepare_drives
  prepare_base
  set_hostname
  set_user
  select_additional_software
  install_base
  configure_system
  install_additional_software
  add_user
  final_system_check
}

main
