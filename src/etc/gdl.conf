config() {
  # Misc. global variables
  INSTALLED=false
  INPUT=default
  RELOAD=false
  SCREEN_HEIGHT_SUFFICIENT=true
  WIFI_AVAILABLE=false
  BLUETOOTH_AVAILABLE=false
  BLUETOOTH_ENABLED=false
  USB=none
  LAPTOP=false
  VM=false
  MOUNTED=false
  ENCRYPTED=false
  GPT=false
  UEFI=false
  FRMT=false
  BTRFS=true
  VFAT=false
  ENABLE_F2FS=false
  ENABLE_BTRFS=false
  ENABLE_XFS=false
  NVIDIA=false
  NVIDIA_DRM=false
  DM=lightdm
  GDL_DIR=/usr/share/gdl
  SKEL_DIR=/mnt/etc/skel
  LANG_FILE="${GDL_DIR}"/lang/english.conf
  LOG_FILE=/root/gdl.log

  # GDL tmp directory
  if [ ! -d /tmp/gdl ]; then
    mkdir /tmp/gdl
  fi

  # Temporary files
  tmp_menu=/tmp/gdl/part.sh
  tmp_list=/tmp/gdl/part.list

  # Generate SSL key
  ssl_key="$(openssl rand -base64 32)"

  # Color variables
  Black='\e[0;30m'
  Red='\e[0;31m'
  Green='\e[0;32m'
  Yellow='\e[0;33m'
  Blue='\e[0;34m'
  Magenta='\e[0;35m'
  Cyan='\e[0;36m'
  White='\e[0;37m'
  BBlack='\e[1;30m' # bold colors
  BRed='\e[1;31m'
  BGreen='\e[1;32m'
  BYellow='\e[1;33m'
  BBlue='\e[1;34m'
  BMagenta='\e[1;35m'
  BCyan='\e[1;36m'
  BWhite='\e[1;37m'
  On_Black='\e[40m' # background colors
  On_Red='\e[41m'
  On_Green='\e[42m'
  On_Yellow='\e[43m'
  On_Blue='\e[44m'
  On_Magenta='\e[45m'
  On_Cyan='\e[46m'
  On_White='\e[47m'
  NC='\e[m'         # "no color" (color reset)
  ALERT=${BWhite}${On_Red}

  # Color scheme for installer
  tput civis
  echo -en "\e]P0000000" #darkblack (black)
  echo -en "\e]P1800000" #darkred (maroon)
  echo -en "\e]P200A86B" #darkgreen (jade)
  echo -en "\e]P3DA9100" #darkyellow/brown (harvest gold)
  echo -en "\e]P4082567" #darkblue (sapphire)
  echo -en "\e]P5AB274F" #darkmagenta (amaranth purple)
  echo -en "\e]P63AA8C1" #darkcyan (moonstone)
  echo -en "\e]P7C0C0C0" #darkwhite/lightgrey (silver)
  echo -en "\e]P8555555" #lightblack/darkgrey (Davy's gray)
  echo -en "\e]P9FF2400" #lightred (scarlet)
  echo -en "\e]PA50C878" #lightgreen (emerald)
  echo -en "\e]PBD4AF37" #lightyellow (metallic gold)
  echo -en "\e]PC318CE7" #lightblue (bleu de France)
  echo -en "\e]PDE0115F" #lightmagenta (ruby)
  echo -en "\e]PE7FFFD4" #lightcyan (aquamarine)
  echo -en "\e]PFE5E4E2" #lightwhite (platinum)
  setterm -foreground yellow -store
  tput cnorm

  # Packages to install regardless of desktop environment
  BASE_PACKAGES="alsa-utils arch-wiki-docs arch-wiki-lite asciiquarium
    base-devel bash bash-completion btrfs-progs bzip2 cmatrix cool-retro-term
    coreutils cowsay cpupower cups cups-pdf dhcpcd dialog dosfstools e2fsprogs
    ffmpegthumbnailer fortune-mod gst-libav gst-plugins-base gst-plugins-good
    gst-plugins-bad gst-plugins-ugly figlet file filesystem findutils gamemode
    lib32-gamemode gawk gcc-libs gettext git git-lfs glibc grep grub gufw gvfs
    gvfs-mtp gvfs-smb gzip inetutils iproute2 iputils jp2a libreoffice-fresh
    licenses linux linux-firmware linux-headers lolcat lvm2 man-db man-pages
    neofetch networkmanager network-manager-applet ntfs-3g pacman pacman-contrib
    pavucontrol pciutils procps-ng psmisc pulseaudio pulseaudio-alsa reflector
    sed shadow sl soundfont-fluid sudo systemd systemd-sysvcompat tar terminator
    texinfo tmux tree ttf-dejavu ufw unzip util-linux vim vkd3d lib32-vkd3d wget
    xdg-user-dirs xorg-apps xorg-server xorg-xinit xterm xz "

  # Lutris/Wine (https://github.com/lutris/docs/blob/master/WineDependencies.md,
  # https://github.com/lutris/docs/blob/master/Battle.Net.md, etc.)
  EXTRA_PACKAGES="lutris wine-staging giflib lib32-giflib libpng lib32-libpng
    libldap lib32-libldap gnutls lib32-gnutls mpg123 lib32-mpg123 openal
    lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse libgpg-error
    lib32-libgpg-error alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib
    libjpeg-turbo lib32-libjpeg-turbo sqlite lib32-sqlite libxcomposite
    lib32-libxcomposite libxinerama lib32-libxinerama libgcrypt lib32-libgcrypt
    ncurses lib32-ncurses opencl-icd-loader lib32-opencl-icd-loader libxslt
    lib32-libxslt libva lib32-libva gtk3 lib32-gtk3 gst-plugins-base-libs
    lib32-gst-plugins-base-libs vulkan-icd-loader lib32-vulkan-icd-loader
    wine-gecko wine-mono winetricks samba sdl lib32-sdl fluidsynth
    lib32-fluidsynth libva-vdpau-driver lib32-libva-vdpau-driver
    libcanberra-pulse lib32-libcanberra-pulse "

  # Packages to install after the base install (esp. AUR software)
  AUR_AND_OPTIONAL_PACKAGES="acpi breeze-amber-cursor-theme boxes
    matcha-gtk-theme no-more-secrets surfn-icons-git toilet xcursor-breeze "

  # Check terminal line height
  if [ "$(tput lines)" -lt 25 ]; then
    SCREEN_HEIGHT_SUFFICIENT=false
  fi

  # Check for USB device(s)
  if (lsblk | grep "run" | grep -o "sd." &>/dev/null); then
    USB="$(lsblk | grep "run" | grep -o "sd.")"
  fi

  # Check for bluetooth capability
  if (dmesg | grep -i "blue" &>/dev/null); then
    BLUETOOTH_AVAILABLE=true
  fi

  # List of time zones
  zonelist="$(find /usr/share/zoneinfo -maxdepth 1 | sed -n -e 's!^.*/!!p' |
    grep -v "posix\|right\|zoneinfo\|zone.tab\|zone1970.tab\|W-SU\|WET\|posix\
rules\|MST7MDT\|iso3166.tab\|CST6CDT" | sort | sed 's/$/ -/g')"

  # Full list of locales
  localelist="$(grep -E "^#?[a-z].*UTF-8" /etc/locale.gen | sed 's/#//' |
    awk '{print $1" -"}')"

  # Full list of keymaps
  key_maps="$(find /usr/share/kbd/keymaps -type f | sed -n -e 's!^.*/!!p' |
    grep ".map.gz" | sed 's/.map.gz//g' | sed 's/$/ -/g' | sort)"

  # List of default mount points for manual partitioning
  points_orig=$(echo -e "/boot   boot-mountpoint>\n/home   \
home-mountpoint>\n/opt   opt-mountpoint>\n/srv   srv-mountpoint>\n/usr    \
usr-mountpoint>\n/var    var-mountpoint>")

  # Check for laptop battery
  if [ -d /sys/class/power_supply/BAT* ]; then
    LAPTOP=true
  fi

  # Check for Wi-Fi network
  wifi_network=$(ip addr | grep "wlp\|wlo\|wlan" | awk '{print $2}' |
    sed 's/://' | head -n 1)
  if [ -n "${wifi_network}" ]; then
    WIFI_AVAILABLE=true
  fi

  # Check for VM environment
  case "$(systemd-detect-virt)" in
  oracle)
    virt="vbox"
    VM=true
    ;;
  vmware)
    virt="vmware"
    VM=true
    ;;
  qemu)
    virt="qemu"
    VM=true
    ;;
  kvm)
    virt="kvm"
    VM=true
    ;;
  microsoft)
    virt="hyper-v"
    VM=true
    ;;
  xen)
    virt="xen"
    VM=true
    ;;
  esac

  # Check microcode
  if grep -q 'AuthenticAMD' /proc/cpuinfo; then
    UCODE="amd-ucode"
  elif grep -q 'GenuineIntel' /proc/cpuinfo; then
    UCODE="intel-ucode"
  fi

  # Check graphics card
  if ! "${VM}"; then
    if (lspci | grep VGA | grep "NVIDIA\|nVidia" &>/dev/null); then
      NVIDIA=true
      default_GPU="nvidia"
      chipset="Nvidia"
    elif (lspci | grep VGA | grep "ATI\|AMD" &>/dev/null); then
      default_GPU="xf86-video-ati"
      chipset="AMD/ATI"
    elif (lspci | grep VGA | grep "Intel" &>/dev/null); then
      default_GPU="xf86-video-intel"
      chipset="Intel"
    else
      default_GPU="xf86-video-vesa"
      chipset="Unknown"
    fi
  fi
}

# Source all variables
config
